#pragma once

// Polynomial           :      x^16 + x^14 + x^12 + x^11 + x^8 + x^5 + x^4 + x^2 + 1
// HD4                  :      <= 241 bits, 30 bytes
// HD5                  :      <= 241 bits, 30 bytes
// HD6                  :      <=  35 bits,  4 bytes
// HD7                  :      <=  10 bits,  1 byte
// HD8                  :      <=   8 bits,  1 byte
// Implicit             :      0xac9a
// Explicit             :      0x15935
// Reversed Implicit    :      0xac9a
// Reversed Explicit    :      0x15935

#include "crc_kernels/crc_kernel_tables.h"

#if defined (USE_CRC_KERNEL_TABLE8)

static uint16_t const Fx5935[256] =
{
  0x0000, 0x5935, 0xb26a, 0xeb5f, 0x3de1, 0x64d4, 0x8f8b, 0xd6be, 0x7bc2, 0x22f7, 0xc9a8, 0x909d, 0x4623, 0x1f16, 0xf449, 0xad7c,
  0xf784, 0xaeb1, 0x45ee, 0x1cdb, 0xca65, 0x9350, 0x780f, 0x213a, 0x8c46, 0xd573, 0x3e2c, 0x6719, 0xb1a7, 0xe892, 0x03cd, 0x5af8,
  0xb63d, 0xef08, 0x0457, 0x5d62, 0x8bdc, 0xd2e9, 0x39b6, 0x6083, 0xcdff, 0x94ca, 0x7f95, 0x26a0, 0xf01e, 0xa92b, 0x4274, 0x1b41,
  0x41b9, 0x188c, 0xf3d3, 0xaae6, 0x7c58, 0x256d, 0xce32, 0x9707, 0x3a7b, 0x634e, 0x8811, 0xd124, 0x079a, 0x5eaf, 0xb5f0, 0xecc5,
  0x354f, 0x6c7a, 0x8725, 0xde10, 0x08ae, 0x519b, 0xbac4, 0xe3f1, 0x4e8d, 0x17b8, 0xfce7, 0xa5d2, 0x736c, 0x2a59, 0xc106, 0x9833,
  0xc2cb, 0x9bfe, 0x70a1, 0x2994, 0xff2a, 0xa61f, 0x4d40, 0x1475, 0xb909, 0xe03c, 0x0b63, 0x5256, 0x84e8, 0xdddd, 0x3682, 0x6fb7,
  0x8372, 0xda47, 0x3118, 0x682d, 0xbe93, 0xe7a6, 0x0cf9, 0x55cc, 0xf8b0, 0xa185, 0x4ada, 0x13ef, 0xc551, 0x9c64, 0x773b, 0x2e0e,
  0x74f6, 0x2dc3, 0xc69c, 0x9fa9, 0x4917, 0x1022, 0xfb7d, 0xa248, 0x0f34, 0x5601, 0xbd5e, 0xe46b, 0x32d5, 0x6be0, 0x80bf, 0xd98a,
  0x6a9e, 0x33ab, 0xd8f4, 0x81c1, 0x577f, 0x0e4a, 0xe515, 0xbc20, 0x115c, 0x4869, 0xa336, 0xfa03, 0x2cbd, 0x7588, 0x9ed7, 0xc7e2,
  0x9d1a, 0xc42f, 0x2f70, 0x7645, 0xa0fb, 0xf9ce, 0x1291, 0x4ba4, 0xe6d8, 0xbfed, 0x54b2, 0x0d87, 0xdb39, 0x820c, 0x6953, 0x3066,
  0xdca3, 0x8596, 0x6ec9, 0x37fc, 0xe142, 0xb877, 0x5328, 0x0a1d, 0xa761, 0xfe54, 0x150b, 0x4c3e, 0x9a80, 0xc3b5, 0x28ea, 0x71df,
  0x2b27, 0x7212, 0x994d, 0xc078, 0x16c6, 0x4ff3, 0xa4ac, 0xfd99, 0x50e5, 0x09d0, 0xe28f, 0xbbba, 0x6d04, 0x3431, 0xdf6e, 0x865b,
  0x5fd1, 0x06e4, 0xedbb, 0xb48e, 0x6230, 0x3b05, 0xd05a, 0x896f, 0x2413, 0x7d26, 0x9679, 0xcf4c, 0x19f2, 0x40c7, 0xab98, 0xf2ad,
  0xa855, 0xf160, 0x1a3f, 0x430a, 0x95b4, 0xcc81, 0x27de, 0x7eeb, 0xd397, 0x8aa2, 0x61fd, 0x38c8, 0xee76, 0xb743, 0x5c1c, 0x0529,
  0xe9ec, 0xb0d9, 0x5b86, 0x02b3, 0xd40d, 0x8d38, 0x6667, 0x3f52, 0x922e, 0xcb1b, 0x2044, 0x7971, 0xafcf, 0xf6fa, 0x1da5, 0x4490,
  0x1e68, 0x475d, 0xac02, 0xf537, 0x2389, 0x7abc, 0x91e3, 0xc8d6, 0x65aa, 0x3c9f, 0xd7c0, 0x8ef5, 0x584b, 0x017e, 0xea21, 0xb314
};

make_crc_kernel_f16_t8(Fx5935)

#else

static uint16_t const Fx5935[16] =
{
  0x0000, 0x5935, 0xb26a, 0xeb5f, 0x3de1, 0x64d4, 0x8f8b, 0xd6be, 0x7bc2, 0x22f7, 0xc9a8, 0x909d, 0x4623, 0x1f16, 0xf449, 0xad7c
};

make_crc_kernel_f16_t4(Fx5935)

#endif
