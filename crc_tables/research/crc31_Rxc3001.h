#pragma once

///////////////////////////////////////////////////////////////////////////////
//
// Reverse Polynomial Lookup Tables
//
// crc31_Rxc3001_Profile =
// {
//   "id" : {
//     "polynomial" : "x^31 + x^19 + x^18 + x^13 + x^12 + 1",
//     "degree"     : 31,
//     "explicit"   : "0x800c3001",
//     "koopman"    : "0x40061800",
//     "normal"     : "0xc3001"
//   },
//   "hd" :     [null, null, null,
//     /* 3 */ { "bits"    : 32738, "bytes"   : 4092 },
//     /* 4 */ { "bits"    : 32738, "bytes"   : 4092 },
//     /* 5 */ { "bits"    : 32738, "bytes"   : 4092 },
//     /* 6 */ { "bits"    : 32738, "bytes"   : 4092 }
//   ],
// }
//
///////////////////////////////////////////////////////////////////////////////

#include "crc_kernels/crc_tables.h"

#if defined(USE_CRC_KERNEL_TABLE8)

static uint32_t const crc31_Rxc3001_tbl[256] =
{
    0x00000000, 0x00800c30, 0x01001860, 0x01801450, 0x020030c0, 0x02803cf0, 0x030028a0, 0x03802490,
    0x04006180, 0x04806db0, 0x050079e0, 0x058075d0, 0x06005140, 0x06805d70, 0x07004920, 0x07804510,
    0x0800c300, 0x0880cf30, 0x0900db60, 0x0980d750, 0x0a00f3c0, 0x0a80fff0, 0x0b00eba0, 0x0b80e790,
    0x0c00a280, 0x0c80aeb0, 0x0d00bae0, 0x0d80b6d0, 0x0e009240, 0x0e809e70, 0x0f008a20, 0x0f808610,
    0x10018600, 0x10818a30, 0x11019e60, 0x11819250, 0x1201b6c0, 0x1281baf0, 0x1301aea0, 0x1381a290,
    0x1401e780, 0x1481ebb0, 0x1501ffe0, 0x1581f3d0, 0x1601d740, 0x1681db70, 0x1701cf20, 0x1781c310,
    0x18014500, 0x18814930, 0x19015d60, 0x19815150, 0x1a0175c0, 0x1a8179f0, 0x1b016da0, 0x1b816190,
    0x1c012480, 0x1c8128b0, 0x1d013ce0, 0x1d8130d0, 0x1e011440, 0x1e811870, 0x1f010c20, 0x1f810010,
    0x20030c00, 0x20830030, 0x21031460, 0x21831850, 0x22033cc0, 0x228330f0, 0x230324a0, 0x23832890,
    0x24036d80, 0x248361b0, 0x250375e0, 0x258379d0, 0x26035d40, 0x26835170, 0x27034520, 0x27834910,
    0x2803cf00, 0x2883c330, 0x2903d760, 0x2983db50, 0x2a03ffc0, 0x2a83f3f0, 0x2b03e7a0, 0x2b83eb90,
    0x2c03ae80, 0x2c83a2b0, 0x2d03b6e0, 0x2d83bad0, 0x2e039e40, 0x2e839270, 0x2f038620, 0x2f838a10,
    0x30028a00, 0x30828630, 0x31029260, 0x31829e50, 0x3202bac0, 0x3282b6f0, 0x3302a2a0, 0x3382ae90,
    0x3402eb80, 0x3482e7b0, 0x3502f3e0, 0x3582ffd0, 0x3602db40, 0x3682d770, 0x3702c320, 0x3782cf10,
    0x38024900, 0x38824530, 0x39025160, 0x39825d50, 0x3a0279c0, 0x3a8275f0, 0x3b0261a0, 0x3b826d90,
    0x3c022880, 0x3c8224b0, 0x3d0230e0, 0x3d823cd0, 0x3e021840, 0x3e821470, 0x3f020020, 0x3f820c10,
    0x40061800, 0x40861430, 0x41060060, 0x41860c50, 0x420628c0, 0x428624f0, 0x430630a0, 0x43863c90,
    0x44067980, 0x448675b0, 0x450661e0, 0x45866dd0, 0x46064940, 0x46864570, 0x47065120, 0x47865d10,
    0x4806db00, 0x4886d730, 0x4906c360, 0x4986cf50, 0x4a06ebc0, 0x4a86e7f0, 0x4b06f3a0, 0x4b86ff90,
    0x4c06ba80, 0x4c86b6b0, 0x4d06a2e0, 0x4d86aed0, 0x4e068a40, 0x4e868670, 0x4f069220, 0x4f869e10,
    0x50079e00, 0x50879230, 0x51078660, 0x51878a50, 0x5207aec0, 0x5287a2f0, 0x5307b6a0, 0x5387ba90,
    0x5407ff80, 0x5487f3b0, 0x5507e7e0, 0x5587ebd0, 0x5607cf40, 0x5687c370, 0x5707d720, 0x5787db10,
    0x58075d00, 0x58875130, 0x59074560, 0x59874950, 0x5a076dc0, 0x5a8761f0, 0x5b0775a0, 0x5b877990,
    0x5c073c80, 0x5c8730b0, 0x5d0724e0, 0x5d8728d0, 0x5e070c40, 0x5e870070, 0x5f071420, 0x5f871810,
    0x60051400, 0x60851830, 0x61050c60, 0x61850050, 0x620524c0, 0x628528f0, 0x63053ca0, 0x63853090,
    0x64057580, 0x648579b0, 0x65056de0, 0x658561d0, 0x66054540, 0x66854970, 0x67055d20, 0x67855110,
    0x6805d700, 0x6885db30, 0x6905cf60, 0x6985c350, 0x6a05e7c0, 0x6a85ebf0, 0x6b05ffa0, 0x6b85f390,
    0x6c05b680, 0x6c85bab0, 0x6d05aee0, 0x6d85a2d0, 0x6e058640, 0x6e858a70, 0x6f059e20, 0x6f859210,
    0x70049200, 0x70849e30, 0x71048a60, 0x71848650, 0x7204a2c0, 0x7284aef0, 0x7304baa0, 0x7384b690,
    0x7404f380, 0x7484ffb0, 0x7504ebe0, 0x7584e7d0, 0x7604c340, 0x7684cf70, 0x7704db20, 0x7784d710,
    0x78045100, 0x78845d30, 0x79044960, 0x79844550, 0x7a0461c0, 0x7a846df0, 0x7b0479a0, 0x7b847590,
    0x7c043080, 0x7c843cb0, 0x7d0428e0, 0x7d8424d0, 0x7e040040, 0x7e840c70, 0x7f041820, 0x7f841410
};

make_crc_kernel_r31_t8(Rxc3001)

#else

static uint32_t const crc31_Rxc3001_tbl[16] =
{
    0x00000000, 0x0800c300, 0x10018600, 0x18014500, 0x20030c00, 0x2803cf00, 0x30028a00, 0x38024900,
    0x40061800, 0x4806db00, 0x50079e00, 0x58075d00, 0x60051400, 0x6805d700, 0x70049200, 0x78045100
};

make_crc_kernel_r31_t4(Rxc3001)

#endif
