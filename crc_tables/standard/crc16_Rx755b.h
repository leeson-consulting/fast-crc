#pragma once

///////////////////////////////////////////////////////////////////////////////
//
// Reverse Polynomial Lookup Tables
//
// crc16_Rx755b_Profile =
// {
//   "id" : {
//     "polynomial" : "x^16 + x^14 + x^13 + x^12 + x^10 + x^8 + x^6 + x^4 + x^3 + x^1 + 1",
//     "degree"     : 16,
//     "explicit"   : "0x1755b",
//     "koopman"    : "0xbaad",
//     "normal"     : "0x755b"
//   },
//   "hd" :     [null, null, null,
//     /* 3 */ { "bits"    : 7985, "bytes"   : 998 },
//     /* 4 */ { "bits"    : 7985, "bytes"   : 998 },
//     /* 5 */ { "bits"    : 108, "bytes"   : 13 },
//     /* 6 */ { "bits"    : 20, "bytes"   : 2 },
//     /* 7 */ { "bits"    : 11, "bytes"   : 1 },
//     /* 8 */ { "bits"    : 2, "bytes"   : 0 },
//     /* 9 */ { "bits"    : 2, "bytes"   : 0 },
//     /* 10 */ { "bits"    : 2, "bytes"   : 0 },
//     /* 11 */ { "bits"    : 2, "bytes"   : 0 }
//   ],
// }
//
///////////////////////////////////////////////////////////////////////////////

#include "crc_kernels/crc_tables.h"

#if defined(USE_CRC_KERNEL_TABLE8)

static uint16_t const crc16_Rx755b_tbl[256] =
{
    0x0000, 0xbd33, 0xcf3b, 0x7208, 0x2b2b, 0x9618, 0xe410, 0x5923,
    0x5656, 0xeb65, 0x996d, 0x245e, 0x7d7d, 0xc04e, 0xb246, 0x0f75,
    0xacac, 0x119f, 0x6397, 0xdea4, 0x8787, 0x3ab4, 0x48bc, 0xf58f,
    0xfafa, 0x47c9, 0x35c1, 0x88f2, 0xd1d1, 0x6ce2, 0x1eea, 0xa3d9,
    0xec05, 0x5136, 0x233e, 0x9e0d, 0xc72e, 0x7a1d, 0x0815, 0xb526,
    0xba53, 0x0760, 0x7568, 0xc85b, 0x9178, 0x2c4b, 0x5e43, 0xe370,
    0x40a9, 0xfd9a, 0x8f92, 0x32a1, 0x6b82, 0xd6b1, 0xa4b9, 0x198a,
    0x16ff, 0xabcc, 0xd9c4, 0x64f7, 0x3dd4, 0x80e7, 0xf2ef, 0x4fdc,
    0x6d57, 0xd064, 0xa26c, 0x1f5f, 0x467c, 0xfb4f, 0x8947, 0x3474,
    0x3b01, 0x8632, 0xf43a, 0x4909, 0x102a, 0xad19, 0xdf11, 0x6222,
    0xc1fb, 0x7cc8, 0x0ec0, 0xb3f3, 0xead0, 0x57e3, 0x25eb, 0x98d8,
    0x97ad, 0x2a9e, 0x5896, 0xe5a5, 0xbc86, 0x01b5, 0x73bd, 0xce8e,
    0x8152, 0x3c61, 0x4e69, 0xf35a, 0xaa79, 0x174a, 0x6542, 0xd871,
    0xd704, 0x6a37, 0x183f, 0xa50c, 0xfc2f, 0x411c, 0x3314, 0x8e27,
    0x2dfe, 0x90cd, 0xe2c5, 0x5ff6, 0x06d5, 0xbbe6, 0xc9ee, 0x74dd,
    0x7ba8, 0xc69b, 0xb493, 0x09a0, 0x5083, 0xedb0, 0x9fb8, 0x228b,
    0xdaae, 0x679d, 0x1595, 0xa8a6, 0xf185, 0x4cb6, 0x3ebe, 0x838d,
    0x8cf8, 0x31cb, 0x43c3, 0xfef0, 0xa7d3, 0x1ae0, 0x68e8, 0xd5db,
    0x7602, 0xcb31, 0xb939, 0x040a, 0x5d29, 0xe01a, 0x9212, 0x2f21,
    0x2054, 0x9d67, 0xef6f, 0x525c, 0x0b7f, 0xb64c, 0xc444, 0x7977,
    0x36ab, 0x8b98, 0xf990, 0x44a3, 0x1d80, 0xa0b3, 0xd2bb, 0x6f88,
    0x60fd, 0xddce, 0xafc6, 0x12f5, 0x4bd6, 0xf6e5, 0x84ed, 0x39de,
    0x9a07, 0x2734, 0x553c, 0xe80f, 0xb12c, 0x0c1f, 0x7e17, 0xc324,
    0xcc51, 0x7162, 0x036a, 0xbe59, 0xe77a, 0x5a49, 0x2841, 0x9572,
    0xb7f9, 0x0aca, 0x78c2, 0xc5f1, 0x9cd2, 0x21e1, 0x53e9, 0xeeda,
    0xe1af, 0x5c9c, 0x2e94, 0x93a7, 0xca84, 0x77b7, 0x05bf, 0xb88c,
    0x1b55, 0xa666, 0xd46e, 0x695d, 0x307e, 0x8d4d, 0xff45, 0x4276,
    0x4d03, 0xf030, 0x8238, 0x3f0b, 0x6628, 0xdb1b, 0xa913, 0x1420,
    0x5bfc, 0xe6cf, 0x94c7, 0x29f4, 0x70d7, 0xcde4, 0xbfec, 0x02df,
    0x0daa, 0xb099, 0xc291, 0x7fa2, 0x2681, 0x9bb2, 0xe9ba, 0x5489,
    0xf750, 0x4a63, 0x386b, 0x8558, 0xdc7b, 0x6148, 0x1340, 0xae73,
    0xa106, 0x1c35, 0x6e3d, 0xd30e, 0x8a2d, 0x371e, 0x4516, 0xf825
};

make_crc_kernel_r16_t8(Rx755b)

#else

static uint16_t const crc16_Rx755b_tbl[16] =
{
    0x0000, 0xacac, 0xec05, 0x40a9, 0x6d57, 0xc1fb, 0x8152, 0x2dfe,
    0xdaae, 0x7602, 0x36ab, 0x9a07, 0xb7f9, 0x1b55, 0x5bfc, 0xf750
};

make_crc_kernel_r16_t4(Rx755b)

#endif
