#pragma once

///////////////////////////////////////////////////////////////////////////////
//
// Reverse Polynomial Lookup Tables
//
// crc30_Rx2030b9c7_Profile =
// {
//   "id" : {
//     "polynomial" : "x^30 + x^29 + x^21 + x^20 + x^15 + x^13 + x^12 + x^11 + x^8 + x^7 + x^6 + x^2 + x^1 + 1",
//     "degree"     : 30,
//     "explicit"   : "0x6030b9c7",
//     "koopman"    : "0x30185ce3",
//     "normal"     : "0x2030b9c7"
//   },
//   "hd" :     [null, null, null,
//     /* 3 */ { "bits"    : 536870881, "bytes"   : 67108860 },
//     /* 4 */ { "bits"    : 536870881, "bytes"   : 67108860 },
//     /* 5 */ { "bits"    : 1762, "bytes"   : 220 },
//     /* 6 */ { "bits"    : 1762, "bytes"   : 220 },
//     /* 7 */ { "bits"    : 148, "bytes"   : 18 },
//     /* 8 */ { "bits"    : 148, "bytes"   : 18 },
//     /* 9 */ { "bits"    : 31, "bytes"   : 3 },
//     /* 10 */ { "bits"    : 31, "bytes"   : 3 },
//     /* 11 */ { "bits"    : 15, "bytes"   : 1 },
//     /* 12 */ { "bits"    : 15, "bytes"   : 1 },
//     /* 13 */ { "bits"    : 1, "bytes"   : 0 },
//     /* 14 */ { "bits"    : 1, "bytes"   : 0 }
//   ],
// }
//
///////////////////////////////////////////////////////////////////////////////

#include "crc_kernels/crc_tables.h"

#if defined(USE_CRC_KERNEL_TABLE8)

static uint32_t const crc30_Rx2030b9c7_tbl[256] =
{
    0x00000000, 0x2f6ac783, 0x2f1b0905, 0x0071ce86, 0x2ff89409, 0x0092538a, 0x00e39d0c, 0x2f895a8f,
    0x2e3fae11, 0x01556992, 0x0124a714, 0x2e4e6097, 0x01c73a18, 0x2eadfd9b, 0x2edc331d, 0x01b6f49e,
    0x2db1da21, 0x02db1da2, 0x02aad324, 0x2dc014a7, 0x02494e28, 0x2d2389ab, 0x2d52472d, 0x023880ae,
    0x038e7430, 0x2ce4b3b3, 0x2c957d35, 0x03ffbab6, 0x2c76e039, 0x031c27ba, 0x036de93c, 0x2c072ebf,
    0x2aad3241, 0x05c7f5c2, 0x05b63b44, 0x2adcfcc7, 0x0555a648, 0x2a3f61cb, 0x2a4eaf4d, 0x052468ce,
    0x04929c50, 0x2bf85bd3, 0x2b899555, 0x04e352d6, 0x2b6a0859, 0x0400cfda, 0x0471015c, 0x2b1bc6df,
    0x071ce860, 0x28762fe3, 0x2807e165, 0x076d26e6, 0x28e47c69, 0x078ebbea, 0x07ff756c, 0x2895b2ef,
    0x29234671, 0x064981f2, 0x06384f74, 0x295288f7, 0x06dbd278, 0x29b115fb, 0x29c0db7d, 0x06aa1cfe,
    0x2494e281, 0x0bfe2502, 0x0b8feb84, 0x24e52c07, 0x0b6c7688, 0x2406b10b, 0x24777f8d, 0x0b1db80e,
    0x0aab4c90, 0x25c18b13, 0x25b04595, 0x0ada8216, 0x2553d899, 0x0a391f1a, 0x0a48d19c, 0x2522161f,
    0x092538a0, 0x264fff23, 0x263e31a5, 0x0954f626, 0x26ddaca9, 0x09b76b2a, 0x09c6a5ac, 0x26ac622f,
    0x271a96b1, 0x08705132, 0x08019fb4, 0x276b5837, 0x08e202b8, 0x2788c53b, 0x27f90bbd, 0x0893cc3e,
    0x0e39d0c0, 0x21531743, 0x2122d9c5, 0x0e481e46, 0x21c144c9, 0x0eab834a, 0x0eda4dcc, 0x21b08a4f,
    0x20067ed1, 0x0f6cb952, 0x0f1d77d4, 0x2077b057, 0x0ffeead8, 0x20942d5b, 0x20e5e3dd, 0x0f8f245e,
    0x23880ae1, 0x0ce2cd62, 0x0c9303e4, 0x23f9c467, 0x0c709ee8, 0x231a596b, 0x236b97ed, 0x0c01506e,
    0x0db7a4f0, 0x22dd6373, 0x22acadf5, 0x0dc66a76, 0x224f30f9, 0x0d25f77a, 0x0d5439fc, 0x223efe7f,
    0x38e74301, 0x178d8482, 0x17fc4a04, 0x38968d87, 0x171fd708, 0x3875108b, 0x3804de0d, 0x176e198e,
    0x16d8ed10, 0x39b22a93, 0x39c3e415, 0x16a92396, 0x39207919, 0x164abe9a, 0x163b701c, 0x3951b79f,
    0x15569920, 0x3a3c5ea3, 0x3a4d9025, 0x152757a6, 0x3aae0d29, 0x15c4caaa, 0x15b5042c, 0x3adfc3af,
    0x3b693731, 0x1403f0b2, 0x14723e34, 0x3b18f9b7, 0x1491a338, 0x3bfb64bb, 0x3b8aaa3d, 0x14e06dbe,
    0x124a7140, 0x3d20b6c3, 0x3d517845, 0x123bbfc6, 0x3db2e549, 0x12d822ca, 0x12a9ec4c, 0x3dc32bcf,
    0x3c75df51, 0x131f18d2, 0x136ed654, 0x3c0411d7, 0x138d4b58, 0x3ce78cdb, 0x3c96425d, 0x13fc85de,
    0x3ffbab61, 0x10916ce2, 0x10e0a264, 0x3f8a65e7, 0x10033f68, 0x3f69f8eb, 0x3f18366d, 0x1072f1ee,
    0x11c40570, 0x3eaec2f3, 0x3edf0c75, 0x11b5cbf6, 0x3e3c9179, 0x115656fa, 0x1127987c, 0x3e4d5fff,
    0x1c73a180, 0x33196603, 0x3368a885, 0x1c026f06, 0x338b3589, 0x1ce1f20a, 0x1c903c8c, 0x33fafb0f,
    0x324c0f91, 0x1d26c812, 0x1d570694, 0x323dc117, 0x1db49b98, 0x32de5c1b, 0x32af929d, 0x1dc5551e,
    0x31c27ba1, 0x1ea8bc22, 0x1ed972a4, 0x31b3b527, 0x1e3aefa8, 0x3150282b, 0x3121e6ad, 0x1e4b212e,
    0x1ffdd5b0, 0x30971233, 0x30e6dcb5, 0x1f8c1b36, 0x300541b9, 0x1f6f863a, 0x1f1e48bc, 0x30748f3f,
    0x36de93c1, 0x19b45442, 0x19c59ac4, 0x36af5d47, 0x192607c8, 0x364cc04b, 0x363d0ecd, 0x1957c94e,
    0x18e13dd0, 0x378bfa53, 0x37fa34d5, 0x1890f356, 0x3719a9d9, 0x18736e5a, 0x1802a0dc, 0x3768675f,
    0x1b6f49e0, 0x34058e63, 0x347440e5, 0x1b1e8766, 0x3497dde9, 0x1bfd1a6a, 0x1b8cd4ec, 0x34e6136f,
    0x3550e7f1, 0x1a3a2072, 0x1a4beef4, 0x35212977, 0x1aa873f8, 0x35c2b47b, 0x35b37afd, 0x1ad9bd7e
};

make_crc_kernel_r30_t8(Rx2030b9c7)

#else

static uint32_t const crc30_Rx2030b9c7_tbl[16] =
{
    0x00000000, 0x2db1da21, 0x2aad3241, 0x071ce860, 0x2494e281, 0x092538a0, 0x0e39d0c0, 0x23880ae1,
    0x38e74301, 0x15569920, 0x124a7140, 0x3ffbab61, 0x1c73a180, 0x31c27ba1, 0x36de93c1, 0x1b6f49e0
};

make_crc_kernel_r30_t4(Rx2030b9c7)

#endif
