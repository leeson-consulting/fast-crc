#pragma once

///////////////////////////////////////////////////////////////////////////////
//
// Reverse Polynomial Lookup Tables
//
// crc12_Rx80f_Profile =
// {
//   "id" : {
//     "polynomial" : "x^12 + x^11 + x^3 + x^2 + x^1 + 1",
//     "degree"     : 12,
//     "explicit"   : "0x180f",
//     "koopman"    : "0xc07",
//     "normal"     : "0x80f"
//   },
//   "hd" :     [null, null, null,
//     /* 3 */ { "bits"    : 2035, "bytes"   : 254 },
//     /* 4 */ { "bits"    : 2035, "bytes"   : 254 },
//     /* 5 */ { "bits"    : 1, "bytes"   : 0 },
//     /* 6 */ { "bits"    : 1, "bytes"   : 0 }
//   ],
// }
//
///////////////////////////////////////////////////////////////////////////////

#include "crc_kernels/crc_kernel_tables.h"

#if defined(USE_CRC_KERNEL_TABLE8)

static uint16_t const Rx80f[256] =
{
    0x000, 0xa0b, 0xa15, 0x01e, 0xa29, 0x022, 0x03c, 0xa37, 0xa51, 0x05a, 0x044, 0xa4f, 0x078, 0xa73, 0xa6d, 0x066,
    0xaa1, 0x0aa, 0x0b4, 0xabf, 0x088, 0xa83, 0xa9d, 0x096, 0x0f0, 0xafb, 0xae5, 0x0ee, 0xad9, 0x0d2, 0x0cc, 0xac7,
    0xb41, 0x14a, 0x154, 0xb5f, 0x168, 0xb63, 0xb7d, 0x176, 0x110, 0xb1b, 0xb05, 0x10e, 0xb39, 0x132, 0x12c, 0xb27,
    0x1e0, 0xbeb, 0xbf5, 0x1fe, 0xbc9, 0x1c2, 0x1dc, 0xbd7, 0xbb1, 0x1ba, 0x1a4, 0xbaf, 0x198, 0xb93, 0xb8d, 0x186,
    0x881, 0x28a, 0x294, 0x89f, 0x2a8, 0x8a3, 0x8bd, 0x2b6, 0x2d0, 0x8db, 0x8c5, 0x2ce, 0x8f9, 0x2f2, 0x2ec, 0x8e7,
    0x220, 0x82b, 0x835, 0x23e, 0x809, 0x202, 0x21c, 0x817, 0x871, 0x27a, 0x264, 0x86f, 0x258, 0x853, 0x84d, 0x246,
    0x3c0, 0x9cb, 0x9d5, 0x3de, 0x9e9, 0x3e2, 0x3fc, 0x9f7, 0x991, 0x39a, 0x384, 0x98f, 0x3b8, 0x9b3, 0x9ad, 0x3a6,
    0x961, 0x36a, 0x374, 0x97f, 0x348, 0x943, 0x95d, 0x356, 0x330, 0x93b, 0x925, 0x32e, 0x919, 0x312, 0x30c, 0x907,
    0xf01, 0x50a, 0x514, 0xf1f, 0x528, 0xf23, 0xf3d, 0x536, 0x550, 0xf5b, 0xf45, 0x54e, 0xf79, 0x572, 0x56c, 0xf67,
    0x5a0, 0xfab, 0xfb5, 0x5be, 0xf89, 0x582, 0x59c, 0xf97, 0xff1, 0x5fa, 0x5e4, 0xfef, 0x5d8, 0xfd3, 0xfcd, 0x5c6,
    0x440, 0xe4b, 0xe55, 0x45e, 0xe69, 0x462, 0x47c, 0xe77, 0xe11, 0x41a, 0x404, 0xe0f, 0x438, 0xe33, 0xe2d, 0x426,
    0xee1, 0x4ea, 0x4f4, 0xeff, 0x4c8, 0xec3, 0xedd, 0x4d6, 0x4b0, 0xebb, 0xea5, 0x4ae, 0xe99, 0x492, 0x48c, 0xe87,
    0x780, 0xd8b, 0xd95, 0x79e, 0xda9, 0x7a2, 0x7bc, 0xdb7, 0xdd1, 0x7da, 0x7c4, 0xdcf, 0x7f8, 0xdf3, 0xded, 0x7e6,
    0xd21, 0x72a, 0x734, 0xd3f, 0x708, 0xd03, 0xd1d, 0x716, 0x770, 0xd7b, 0xd65, 0x76e, 0xd59, 0x752, 0x74c, 0xd47,
    0xcc1, 0x6ca, 0x6d4, 0xcdf, 0x6e8, 0xce3, 0xcfd, 0x6f6, 0x690, 0xc9b, 0xc85, 0x68e, 0xcb9, 0x6b2, 0x6ac, 0xca7,
    0x660, 0xc6b, 0xc75, 0x67e, 0xc49, 0x642, 0x65c, 0xc57, 0xc31, 0x63a, 0x624, 0xc2f, 0x618, 0xc13, 0xc0d, 0x606
};

make_crc_kernel_r12_t8(Rx80f)

#else

static uint16_t const Rx80f[16] =
{
    0x000, 0xaa1, 0xb41, 0x1e0, 0x881, 0x220, 0x3c0, 0x961, 0xf01, 0x5a0, 0x440, 0xee1, 0x780, 0xd21, 0xcc1, 0x660
};

make_crc_kernel_r12_t4(Rx80f)

#endif
