#pragma once

///////////////////////////////////////////////////////////////////////////////
//
// Reverse Polynomial Lookup Tables
//
// crc16_Rxa097_Profile =
// {
//   "id" : {
//     "polynomial" : "x^16 + x^15 + x^13 + x^7 + x^4 + x^2 + x^1 + 1",
//     "degree"     : 16,
//     "explicit"   : "0x1a097",
//     "koopman"    : "0xd04b",
//     "normal"     : "0xa097"
//   },
//   "hd" :     [null, null, null,
//     /* 3 */ { "bits"    : 32750, "bytes"   : 4093 },
//     /* 4 */ { "bits"    : 32750, "bytes"   : 4093 },
//     /* 5 */ { "bits"    : 67, "bytes"   : 8 },
//     /* 6 */ { "bits"    : 67, "bytes"   : 8 },
//     /* 7 */ { "bits"    : 8, "bytes"   : 1 },
//     /* 8 */ { "bits"    : 8, "bytes"   : 1 }
//   ],
// }
//
///////////////////////////////////////////////////////////////////////////////

#include "crc_kernels/crc_kernel_tables.h"

#if defined(USE_CRC_KERNEL_TABLE8)

static uint16_t const Rxa097[256] =
{
    0x0000, 0xf11b, 0x303d, 0xc126, 0x607a, 0x9161, 0x5047, 0xa15c,
    0xc0f4, 0x31ef, 0xf0c9, 0x01d2, 0xa08e, 0x5195, 0x90b3, 0x61a8,
    0x53e3, 0xa2f8, 0x63de, 0x92c5, 0x3399, 0xc282, 0x03a4, 0xf2bf,
    0x9317, 0x620c, 0xa32a, 0x5231, 0xf36d, 0x0276, 0xc350, 0x324b,
    0xa7c6, 0x56dd, 0x97fb, 0x66e0, 0xc7bc, 0x36a7, 0xf781, 0x069a,
    0x6732, 0x9629, 0x570f, 0xa614, 0x0748, 0xf653, 0x3775, 0xc66e,
    0xf425, 0x053e, 0xc418, 0x3503, 0x945f, 0x6544, 0xa462, 0x5579,
    0x34d1, 0xc5ca, 0x04ec, 0xf5f7, 0x54ab, 0xa5b0, 0x6496, 0x958d,
    0x9d87, 0x6c9c, 0xadba, 0x5ca1, 0xfdfd, 0x0ce6, 0xcdc0, 0x3cdb,
    0x5d73, 0xac68, 0x6d4e, 0x9c55, 0x3d09, 0xcc12, 0x0d34, 0xfc2f,
    0xce64, 0x3f7f, 0xfe59, 0x0f42, 0xae1e, 0x5f05, 0x9e23, 0x6f38,
    0x0e90, 0xff8b, 0x3ead, 0xcfb6, 0x6eea, 0x9ff1, 0x5ed7, 0xafcc,
    0x3a41, 0xcb5a, 0x0a7c, 0xfb67, 0x5a3b, 0xab20, 0x6a06, 0x9b1d,
    0xfab5, 0x0bae, 0xca88, 0x3b93, 0x9acf, 0x6bd4, 0xaaf2, 0x5be9,
    0x69a2, 0x98b9, 0x599f, 0xa884, 0x09d8, 0xf8c3, 0x39e5, 0xc8fe,
    0xa956, 0x584d, 0x996b, 0x6870, 0xc92c, 0x3837, 0xf911, 0x080a,
    0xe905, 0x181e, 0xd938, 0x2823, 0x897f, 0x7864, 0xb942, 0x4859,
    0x29f1, 0xd8ea, 0x19cc, 0xe8d7, 0x498b, 0xb890, 0x79b6, 0x88ad,
    0xbae6, 0x4bfd, 0x8adb, 0x7bc0, 0xda9c, 0x2b87, 0xeaa1, 0x1bba,
    0x7a12, 0x8b09, 0x4a2f, 0xbb34, 0x1a68, 0xeb73, 0x2a55, 0xdb4e,
    0x4ec3, 0xbfd8, 0x7efe, 0x8fe5, 0x2eb9, 0xdfa2, 0x1e84, 0xef9f,
    0x8e37, 0x7f2c, 0xbe0a, 0x4f11, 0xee4d, 0x1f56, 0xde70, 0x2f6b,
    0x1d20, 0xec3b, 0x2d1d, 0xdc06, 0x7d5a, 0x8c41, 0x4d67, 0xbc7c,
    0xddd4, 0x2ccf, 0xede9, 0x1cf2, 0xbdae, 0x4cb5, 0x8d93, 0x7c88,
    0x7482, 0x8599, 0x44bf, 0xb5a4, 0x14f8, 0xe5e3, 0x24c5, 0xd5de,
    0xb476, 0x456d, 0x844b, 0x7550, 0xd40c, 0x2517, 0xe431, 0x152a,
    0x2761, 0xd67a, 0x175c, 0xe647, 0x471b, 0xb600, 0x7726, 0x863d,
    0xe795, 0x168e, 0xd7a8, 0x26b3, 0x87ef, 0x76f4, 0xb7d2, 0x46c9,
    0xd344, 0x225f, 0xe379, 0x1262, 0xb33e, 0x4225, 0x8303, 0x7218,
    0x13b0, 0xe2ab, 0x238d, 0xd296, 0x73ca, 0x82d1, 0x43f7, 0xb2ec,
    0x80a7, 0x71bc, 0xb09a, 0x4181, 0xe0dd, 0x11c6, 0xd0e0, 0x21fb,
    0x4053, 0xb148, 0x706e, 0x8175, 0x2029, 0xd132, 0x1014, 0xe10f
};

make_crc_kernel_r16_t8(Rxa097)

#else

static uint16_t const Rxa097[16] =
{
    0x0000, 0x53e3, 0xa7c6, 0xf425, 0x9d87, 0xce64, 0x3a41, 0x69a2,
    0xe905, 0xbae6, 0x4ec3, 0x1d20, 0x7482, 0x2761, 0xd344, 0x80a7
};

make_crc_kernel_r16_t4(Rxa097)

#endif
