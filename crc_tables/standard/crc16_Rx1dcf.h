#pragma once

///////////////////////////////////////////////////////////////////////////////
//
// Reverse Polynomial Lookup Tables
//
// crc16_Rx1dcf_Profile =
// {
//   "id" : {
//     "polynomial" : "x^16 + x^12 + x^11 + x^10 + x^8 + x^7 + x^6 + x^3 + x^2 + x^1 + 1",
//     "degree"     : 16,
//     "explicit"   : "0x11dcf",
//     "koopman"    : "0x8ee7",
//     "normal"     : "0x1dcf"
//   },
//   "hd" :     [null, null, null,
//     /* 3 */ { "bits"    : 2743, "bytes"   : 342 },
//     /* 4 */ { "bits"    : 2743, "bytes"   : 342 },
//     /* 5 */ { "bits"    : 104, "bytes"   : 13 },
//     /* 6 */ { "bits"    : 11, "bytes"   : 1 },
//     /* 7 */ { "bits"    : 10, "bytes"   : 1 },
//     /* 8 */ { "bits"    : 8, "bytes"   : 1 },
//     /* 9 */ { "bits"    : 1, "bytes"   : 0 },
//     /* 10 */ { "bits"    : 1, "bytes"   : 0 },
//     /* 11 */ { "bits"    : 1, "bytes"   : 0 }
//   ],
// }
//
///////////////////////////////////////////////////////////////////////////////

#include "crc_kernels/crc_tables.h"

#if defined(USE_CRC_KERNEL_TABLE8)

static uint16_t const crc16_Rx1dcf_tbl[256] =
{
    0x0000, 0x5aa2, 0xb544, 0xefe6, 0x8df9, 0xd75b, 0x38bd, 0x621f,
    0xfc83, 0xa621, 0x49c7, 0x1365, 0x717a, 0x2bd8, 0xc43e, 0x9e9c,
    0x1e77, 0x44d5, 0xab33, 0xf191, 0x938e, 0xc92c, 0x26ca, 0x7c68,
    0xe2f4, 0xb856, 0x57b0, 0x0d12, 0x6f0d, 0x35af, 0xda49, 0x80eb,
    0x3cee, 0x664c, 0x89aa, 0xd308, 0xb117, 0xebb5, 0x0453, 0x5ef1,
    0xc06d, 0x9acf, 0x7529, 0x2f8b, 0x4d94, 0x1736, 0xf8d0, 0xa272,
    0x2299, 0x783b, 0x97dd, 0xcd7f, 0xaf60, 0xf5c2, 0x1a24, 0x4086,
    0xde1a, 0x84b8, 0x6b5e, 0x31fc, 0x53e3, 0x0941, 0xe6a7, 0xbc05,
    0x79dc, 0x237e, 0xcc98, 0x963a, 0xf425, 0xae87, 0x4161, 0x1bc3,
    0x855f, 0xdffd, 0x301b, 0x6ab9, 0x08a6, 0x5204, 0xbde2, 0xe740,
    0x67ab, 0x3d09, 0xd2ef, 0x884d, 0xea52, 0xb0f0, 0x5f16, 0x05b4,
    0x9b28, 0xc18a, 0x2e6c, 0x74ce, 0x16d1, 0x4c73, 0xa395, 0xf937,
    0x4532, 0x1f90, 0xf076, 0xaad4, 0xc8cb, 0x9269, 0x7d8f, 0x272d,
    0xb9b1, 0xe313, 0x0cf5, 0x5657, 0x3448, 0x6eea, 0x810c, 0xdbae,
    0x5b45, 0x01e7, 0xee01, 0xb4a3, 0xd6bc, 0x8c1e, 0x63f8, 0x395a,
    0xa7c6, 0xfd64, 0x1282, 0x4820, 0x2a3f, 0x709d, 0x9f7b, 0xc5d9,
    0xf3b8, 0xa91a, 0x46fc, 0x1c5e, 0x7e41, 0x24e3, 0xcb05, 0x91a7,
    0x0f3b, 0x5599, 0xba7f, 0xe0dd, 0x82c2, 0xd860, 0x3786, 0x6d24,
    0xedcf, 0xb76d, 0x588b, 0x0229, 0x6036, 0x3a94, 0xd572, 0x8fd0,
    0x114c, 0x4bee, 0xa408, 0xfeaa, 0x9cb5, 0xc617, 0x29f1, 0x7353,
    0xcf56, 0x95f4, 0x7a12, 0x20b0, 0x42af, 0x180d, 0xf7eb, 0xad49,
    0x33d5, 0x6977, 0x8691, 0xdc33, 0xbe2c, 0xe48e, 0x0b68, 0x51ca,
    0xd121, 0x8b83, 0x6465, 0x3ec7, 0x5cd8, 0x067a, 0xe99c, 0xb33e,
    0x2da2, 0x7700, 0x98e6, 0xc244, 0xa05b, 0xfaf9, 0x151f, 0x4fbd,
    0x8a64, 0xd0c6, 0x3f20, 0x6582, 0x079d, 0x5d3f, 0xb2d9, 0xe87b,
    0x76e7, 0x2c45, 0xc3a3, 0x9901, 0xfb1e, 0xa1bc, 0x4e5a, 0x14f8,
    0x9413, 0xceb1, 0x2157, 0x7bf5, 0x19ea, 0x4348, 0xacae, 0xf60c,
    0x6890, 0x3232, 0xddd4, 0x8776, 0xe569, 0xbfcb, 0x502d, 0x0a8f,
    0xb68a, 0xec28, 0x03ce, 0x596c, 0x3b73, 0x61d1, 0x8e37, 0xd495,
    0x4a09, 0x10ab, 0xff4d, 0xa5ef, 0xc7f0, 0x9d52, 0x72b4, 0x2816,
    0xa8fd, 0xf25f, 0x1db9, 0x471b, 0x2504, 0x7fa6, 0x9040, 0xcae2,
    0x547e, 0x0edc, 0xe13a, 0xbb98, 0xd987, 0x8325, 0x6cc3, 0x3661
};

make_crc_kernel_r16_t8(Rx1dcf)

#else

static uint16_t const crc16_Rx1dcf_tbl[16] =
{
    0x0000, 0x1e77, 0x3cee, 0x2299, 0x79dc, 0x67ab, 0x4532, 0x5b45,
    0xf3b8, 0xedcf, 0xcf56, 0xd121, 0x8a64, 0x9413, 0xb68a, 0xa8fd
};

make_crc_kernel_r16_t4(Rx1dcf)

#endif
