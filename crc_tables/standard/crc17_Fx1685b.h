#pragma once

///////////////////////////////////////////////////////////////////////////////
//
// Forward Polynomial Lookup Tables
//
// crc17_Fx1685b_Profile =
// {
//   "id" : {
//     "polynomial" : "x^17 + x^16 + x^14 + x^13 + x^11 + x^6 + x^4 + x^3 + x^1 + 1",
//     "degree"     : 17,
//     "explicit"   : "0x3685b",
//     "koopman"    : "0x1b42d",
//     "normal"     : "0x1685b"
//   },
//   "hd" :     [null, null, null,
//     /* 3 */ { "bits"    : 238, "bytes"   : 29 },
//     /* 4 */ { "bits"    : 238, "bytes"   : 29 },
//     /* 5 */ { "bits"    : 238, "bytes"   : 29 },
//     /* 6 */ { "bits"    : 238, "bytes"   : 29 },
//     /* 7 */ { "bits"    : 2, "bytes"   : 0 },
//     /* 8 */ { "bits"    : 2, "bytes"   : 0 },
//     /* 9 */ { "bits"    : 2, "bytes"   : 0 },
//     /* 10 */ { "bits"    : 2, "bytes"   : 0 }
//   ],
// }
//
///////////////////////////////////////////////////////////////////////////////

#include "crc_kernels/crc_tables.h"

#if defined(USE_CRC_KERNEL_TABLE8)

static uint32_t const crc17_Fx1685b_tbl[256] =
{
    0x00000, 0x1685b, 0x1b8ed, 0x0d0b6, 0x01981, 0x171da, 0x1a16c, 0x0c937,
    0x03302, 0x15b59, 0x18bef, 0x0e3b4, 0x02a83, 0x142d8, 0x1926e, 0x0fa35,
    0x06604, 0x10e5f, 0x1dee9, 0x0b6b2, 0x07f85, 0x117de, 0x1c768, 0x0af33,
    0x05506, 0x13d5d, 0x1edeb, 0x085b0, 0x04c87, 0x124dc, 0x1f46a, 0x09c31,
    0x0cc08, 0x1a453, 0x174e5, 0x01cbe, 0x0d589, 0x1bdd2, 0x16d64, 0x0053f,
    0x0ff0a, 0x19751, 0x147e7, 0x02fbc, 0x0e68b, 0x18ed0, 0x15e66, 0x0363d,
    0x0aa0c, 0x1c257, 0x112e1, 0x07aba, 0x0b38d, 0x1dbd6, 0x10b60, 0x0633b,
    0x0990e, 0x1f155, 0x121e3, 0x049b8, 0x0808f, 0x1e8d4, 0x13862, 0x05039,
    0x19810, 0x0f04b, 0x020fd, 0x148a6, 0x18191, 0x0e9ca, 0x0397c, 0x15127,
    0x1ab12, 0x0c349, 0x013ff, 0x17ba4, 0x1b293, 0x0dac8, 0x00a7e, 0x16225,
    0x1fe14, 0x0964f, 0x046f9, 0x12ea2, 0x1e795, 0x08fce, 0x05f78, 0x13723,
    0x1cd16, 0x0a54d, 0x075fb, 0x11da0, 0x1d497, 0x0bccc, 0x06c7a, 0x10421,
    0x15418, 0x03c43, 0x0ecf5, 0x184ae, 0x14d99, 0x025c2, 0x0f574, 0x19d2f,
    0x1671a, 0x00f41, 0x0dff7, 0x1b7ac, 0x17e9b, 0x016c0, 0x0c676, 0x1ae2d,
    0x1321c, 0x05a47, 0x08af1, 0x1e2aa, 0x12b9d, 0x043c6, 0x09370, 0x1fb2b,
    0x1011e, 0x06945, 0x0b9f3, 0x1d1a8, 0x1189f, 0x070c4, 0x0a072, 0x1c829,
    0x0587b, 0x13020, 0x1e096, 0x088cd, 0x041fa, 0x129a1, 0x1f917, 0x0914c,
    0x06b79, 0x10322, 0x1d394, 0x0bbcf, 0x072f8, 0x11aa3, 0x1ca15, 0x0a24e,
    0x03e7f, 0x15624, 0x18692, 0x0eec9, 0x027fe, 0x14fa5, 0x19f13, 0x0f748,
    0x00d7d, 0x16526, 0x1b590, 0x0ddcb, 0x014fc, 0x17ca7, 0x1ac11, 0x0c44a,
    0x09473, 0x1fc28, 0x12c9e, 0x044c5, 0x08df2, 0x1e5a9, 0x1351f, 0x05d44,
    0x0a771, 0x1cf2a, 0x11f9c, 0x077c7, 0x0bef0, 0x1d6ab, 0x1061d, 0x06e46,
    0x0f277, 0x19a2c, 0x14a9a, 0x022c1, 0x0ebf6, 0x183ad, 0x1531b, 0x03b40,
    0x0c175, 0x1a92e, 0x17998, 0x011c3, 0x0d8f4, 0x1b0af, 0x16019, 0x00842,
    0x1c06b, 0x0a830, 0x07886, 0x110dd, 0x1d9ea, 0x0b1b1, 0x06107, 0x1095c,
    0x1f369, 0x09b32, 0x04b84, 0x123df, 0x1eae8, 0x082b3, 0x05205, 0x13a5e,
    0x1a66f, 0x0ce34, 0x01e82, 0x176d9, 0x1bfee, 0x0d7b5, 0x00703, 0x16f58,
    0x1956d, 0x0fd36, 0x02d80, 0x145db, 0x18cec, 0x0e4b7, 0x03401, 0x15c5a,
    0x10c63, 0x06438, 0x0b48e, 0x1dcd5, 0x115e2, 0x07db9, 0x0ad0f, 0x1c554,
    0x13f61, 0x0573a, 0x0878c, 0x1efd7, 0x126e0, 0x04ebb, 0x09e0d, 0x1f656,
    0x16a67, 0x0023c, 0x0d28a, 0x1bad1, 0x173e6, 0x01bbd, 0x0cb0b, 0x1a350,
    0x15965, 0x0313e, 0x0e188, 0x189d3, 0x140e4, 0x028bf, 0x0f809, 0x19052
};

make_crc_kernel_f17_t8(Fx1685b)

#else

static uint32_t const crc17_Fx1685b_tbl[16] =
{
    0x00000, 0x1685b, 0x1b8ed, 0x0d0b6, 0x01981, 0x171da, 0x1a16c, 0x0c937,
    0x03302, 0x15b59, 0x18bef, 0x0e3b4, 0x02a83, 0x142d8, 0x1926e, 0x0fa35
};

make_crc_kernel_f17_t4(Fx1685b)

#endif
