#pragma once

///////////////////////////////////////////////////////////////////////////////
//
// Forward Polynomial Lookup Tables
//
// crc12_Fxd31_Profile =
// {
//   "id" : {
//     "polynomial" : "x^12 + x^11 + x^10 + x^8 + x^5 + x^4 + 1",
//     "degree"     : 12,
//     "explicit"   : "0x1d31",
//     "koopman"    : "0xe98",
//     "normal"     : "0xd31"
//   },
//   "hd" :     [null, null, null,
//     /* 3 */ { "bits"    : 1073, "bytes"   : 134 },
//     /* 4 */ { "bits"    : 1073, "bytes"   : 134 },
//     /* 5 */ { "bits"    : 13, "bytes"   : 1 },
//     /* 6 */ { "bits"    : 5, "bytes"   : 0 },
//     /* 7 */ { "bits"    : 4, "bytes"   : 0 }
//   ],
// }
//
///////////////////////////////////////////////////////////////////////////////

#include "crc_kernels/crc_tables.h"

#if defined(USE_CRC_KERNEL_TABLE8)

static uint16_t const Fxd31[256] =
{
    0x000, 0xd31, 0x753, 0xa62, 0xea6, 0x397, 0x9f5, 0x4c4, 0x07d, 0xd4c, 0x72e, 0xa1f, 0xedb, 0x3ea, 0x988, 0x4b9,
    0x0fa, 0xdcb, 0x7a9, 0xa98, 0xe5c, 0x36d, 0x90f, 0x43e, 0x087, 0xdb6, 0x7d4, 0xae5, 0xe21, 0x310, 0x972, 0x443,
    0x1f4, 0xcc5, 0x6a7, 0xb96, 0xf52, 0x263, 0x801, 0x530, 0x189, 0xcb8, 0x6da, 0xbeb, 0xf2f, 0x21e, 0x87c, 0x54d,
    0x10e, 0xc3f, 0x65d, 0xb6c, 0xfa8, 0x299, 0x8fb, 0x5ca, 0x173, 0xc42, 0x620, 0xb11, 0xfd5, 0x2e4, 0x886, 0x5b7,
    0x3e8, 0xed9, 0x4bb, 0x98a, 0xd4e, 0x07f, 0xa1d, 0x72c, 0x395, 0xea4, 0x4c6, 0x9f7, 0xd33, 0x002, 0xa60, 0x751,
    0x312, 0xe23, 0x441, 0x970, 0xdb4, 0x085, 0xae7, 0x7d6, 0x36f, 0xe5e, 0x43c, 0x90d, 0xdc9, 0x0f8, 0xa9a, 0x7ab,
    0x21c, 0xf2d, 0x54f, 0x87e, 0xcba, 0x18b, 0xbe9, 0x6d8, 0x261, 0xf50, 0x532, 0x803, 0xcc7, 0x1f6, 0xb94, 0x6a5,
    0x2e6, 0xfd7, 0x5b5, 0x884, 0xc40, 0x171, 0xb13, 0x622, 0x29b, 0xfaa, 0x5c8, 0x8f9, 0xc3d, 0x10c, 0xb6e, 0x65f,
    0x7d0, 0xae1, 0x083, 0xdb2, 0x976, 0x447, 0xe25, 0x314, 0x7ad, 0xa9c, 0x0fe, 0xdcf, 0x90b, 0x43a, 0xe58, 0x369,
    0x72a, 0xa1b, 0x079, 0xd48, 0x98c, 0x4bd, 0xedf, 0x3ee, 0x757, 0xa66, 0x004, 0xd35, 0x9f1, 0x4c0, 0xea2, 0x393,
    0x624, 0xb15, 0x177, 0xc46, 0x882, 0x5b3, 0xfd1, 0x2e0, 0x659, 0xb68, 0x10a, 0xc3b, 0x8ff, 0x5ce, 0xfac, 0x29d,
    0x6de, 0xbef, 0x18d, 0xcbc, 0x878, 0x549, 0xf2b, 0x21a, 0x6a3, 0xb92, 0x1f0, 0xcc1, 0x805, 0x534, 0xf56, 0x267,
    0x438, 0x909, 0x36b, 0xe5a, 0xa9e, 0x7af, 0xdcd, 0x0fc, 0x445, 0x974, 0x316, 0xe27, 0xae3, 0x7d2, 0xdb0, 0x081,
    0x4c2, 0x9f3, 0x391, 0xea0, 0xa64, 0x755, 0xd37, 0x006, 0x4bf, 0x98e, 0x3ec, 0xedd, 0xa19, 0x728, 0xd4a, 0x07b,
    0x5cc, 0x8fd, 0x29f, 0xfae, 0xb6a, 0x65b, 0xc39, 0x108, 0x5b1, 0x880, 0x2e2, 0xfd3, 0xb17, 0x626, 0xc44, 0x175,
    0x536, 0x807, 0x265, 0xf54, 0xb90, 0x6a1, 0xcc3, 0x1f2, 0x54b, 0x87a, 0x218, 0xf29, 0xbed, 0x6dc, 0xcbe, 0x18f
};

make_crc_kernel_f12_t8(Fxd31)

#else

static uint16_t const Fxd31[16] =
{
    0x000, 0xd31, 0x753, 0xa62, 0xea6, 0x397, 0x9f5, 0x4c4, 0x07d, 0xd4c, 0x72e, 0xa1f, 0xedb, 0x3ea, 0x988, 0x4b9
};

make_crc_kernel_f12_t4(Fxd31)

#endif
