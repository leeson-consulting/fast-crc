#pragma once

///////////////////////////////////////////////////////////////////////////////
//
// Reverse Polynomial Lookup Tables
//
// crc12_Rxd31_Profile =
// {
//   "id" : {
//     "polynomial" : "x^12 + x^11 + x^10 + x^8 + x^5 + x^4 + 1",
//     "degree"     : 12,
//     "explicit"   : "0x1d31",
//     "koopman"    : "0xe98",
//     "normal"     : "0xd31"
//   },
//   "hd" :     [null, null, null,
//     /* 3 */ { "bits"    : 1073, "bytes"   : 134 },
//     /* 4 */ { "bits"    : 1073, "bytes"   : 134 },
//     /* 5 */ { "bits"    : 13, "bytes"   : 1 },
//     /* 6 */ { "bits"    : 5, "bytes"   : 0 },
//     /* 7 */ { "bits"    : 4, "bytes"   : 0 }
//   ],
// }
//
///////////////////////////////////////////////////////////////////////////////

#include "crc_kernels/crc_tables.h"

#if defined(USE_CRC_KERNEL_TABLE8)

static uint16_t const Rxd31[256] =
{
    0x000, 0x0be, 0x17c, 0x1c2, 0x2f8, 0x246, 0x384, 0x33a, 0x5f0, 0x54e, 0x48c, 0x432, 0x708, 0x7b6, 0x674, 0x6ca,
    0xbe0, 0xb5e, 0xa9c, 0xa22, 0x918, 0x9a6, 0x864, 0x8da, 0xe10, 0xeae, 0xf6c, 0xfd2, 0xce8, 0xc56, 0xd94, 0xd2a,
    0x657, 0x6e9, 0x72b, 0x795, 0x4af, 0x411, 0x5d3, 0x56d, 0x3a7, 0x319, 0x2db, 0x265, 0x15f, 0x1e1, 0x023, 0x09d,
    0xdb7, 0xd09, 0xccb, 0xc75, 0xf4f, 0xff1, 0xe33, 0xe8d, 0x847, 0x8f9, 0x93b, 0x985, 0xabf, 0xa01, 0xbc3, 0xb7d,
    0xcae, 0xc10, 0xdd2, 0xd6c, 0xe56, 0xee8, 0xf2a, 0xf94, 0x95e, 0x9e0, 0x822, 0x89c, 0xba6, 0xb18, 0xada, 0xa64,
    0x74e, 0x7f0, 0x632, 0x68c, 0x5b6, 0x508, 0x4ca, 0x474, 0x2be, 0x200, 0x3c2, 0x37c, 0x046, 0x0f8, 0x13a, 0x184,
    0xaf9, 0xa47, 0xb85, 0xb3b, 0x801, 0x8bf, 0x97d, 0x9c3, 0xf09, 0xfb7, 0xe75, 0xecb, 0xdf1, 0xd4f, 0xc8d, 0xc33,
    0x119, 0x1a7, 0x065, 0x0db, 0x3e1, 0x35f, 0x29d, 0x223, 0x4e9, 0x457, 0x595, 0x52b, 0x611, 0x6af, 0x76d, 0x7d3,
    0x8cb, 0x875, 0x9b7, 0x909, 0xa33, 0xa8d, 0xb4f, 0xbf1, 0xd3b, 0xd85, 0xc47, 0xcf9, 0xfc3, 0xf7d, 0xebf, 0xe01,
    0x32b, 0x395, 0x257, 0x2e9, 0x1d3, 0x16d, 0x0af, 0x011, 0x6db, 0x665, 0x7a7, 0x719, 0x423, 0x49d, 0x55f, 0x5e1,
    0xe9c, 0xe22, 0xfe0, 0xf5e, 0xc64, 0xcda, 0xd18, 0xda6, 0xb6c, 0xbd2, 0xa10, 0xaae, 0x994, 0x92a, 0x8e8, 0x856,
    0x57c, 0x5c2, 0x400, 0x4be, 0x784, 0x73a, 0x6f8, 0x646, 0x08c, 0x032, 0x1f0, 0x14e, 0x274, 0x2ca, 0x308, 0x3b6,
    0x465, 0x4db, 0x519, 0x5a7, 0x69d, 0x623, 0x7e1, 0x75f, 0x195, 0x12b, 0x0e9, 0x057, 0x36d, 0x3d3, 0x211, 0x2af,
    0xf85, 0xf3b, 0xef9, 0xe47, 0xd7d, 0xdc3, 0xc01, 0xcbf, 0xa75, 0xacb, 0xb09, 0xbb7, 0x88d, 0x833, 0x9f1, 0x94f,
    0x232, 0x28c, 0x34e, 0x3f0, 0x0ca, 0x074, 0x1b6, 0x108, 0x7c2, 0x77c, 0x6be, 0x600, 0x53a, 0x584, 0x446, 0x4f8,
    0x9d2, 0x96c, 0x8ae, 0x810, 0xb2a, 0xb94, 0xa56, 0xae8, 0xc22, 0xc9c, 0xd5e, 0xde0, 0xeda, 0xe64, 0xfa6, 0xf18
};

make_crc_kernel_r12_t8(Rxd31)

#else

static uint16_t const Rxd31[16] =
{
    0x000, 0xbe0, 0x657, 0xdb7, 0xcae, 0x74e, 0xaf9, 0x119, 0x8cb, 0x32b, 0xe9c, 0x57c, 0x465, 0xf85, 0x232, 0x9d2
};

make_crc_kernel_r12_t4(Rxd31)

#endif
