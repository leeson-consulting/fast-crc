#pragma once

///////////////////////////////////////////////////////////////////////////////
//
// Reverse Polynomial Lookup Tables
//
// crc16_Rxc867_Profile =
// {
//   "id" : {
//     "polynomial" : "x^16 + x^15 + x^14 + x^11 + x^6 + x^5 + x^2 + x^1 + 1",
//     "degree"     : 16,
//     "explicit"   : "0x1c867",
//     "koopman"    : "0xe433",
//     "normal"     : "0xc867"
//   },
//   "hd" :     [null, null, null,
//     /* 3 */ { "bits"    : 65519, "bytes"   : 8189 },
//     /* 4 */ { "bits"    : 361, "bytes"   : 45 },
//     /* 5 */ { "bits"    : 44, "bytes"   : 5 },
//     /* 6 */ { "bits"    : 11, "bytes"   : 1 },
//     /* 7 */ { "bits"    : 11, "bytes"   : 1 },
//     /* 8 */ { "bits"    : 5, "bytes"   : 0 },
//     /* 9 */ { "bits"    : 1, "bytes"   : 0 }
//   ],
// }
//
///////////////////////////////////////////////////////////////////////////////

#include "crc_kernels/crc_tables.h"

#if defined(USE_CRC_KERNEL_TABLE8)

static uint16_t const Rxc867[256] =
{
    0x0000, 0x5a7a, 0xb4f4, 0xee8e, 0xa5cf, 0xffb5, 0x113b, 0x4b41,
    0x87b9, 0xddc3, 0x334d, 0x6937, 0x2276, 0x780c, 0x9682, 0xccf8,
    0xc355, 0x992f, 0x77a1, 0x2ddb, 0x669a, 0x3ce0, 0xd26e, 0x8814,
    0x44ec, 0x1e96, 0xf018, 0xaa62, 0xe123, 0xbb59, 0x55d7, 0x0fad,
    0x4a8d, 0x10f7, 0xfe79, 0xa403, 0xef42, 0xb538, 0x5bb6, 0x01cc,
    0xcd34, 0x974e, 0x79c0, 0x23ba, 0x68fb, 0x3281, 0xdc0f, 0x8675,
    0x89d8, 0xd3a2, 0x3d2c, 0x6756, 0x2c17, 0x766d, 0x98e3, 0xc299,
    0x0e61, 0x541b, 0xba95, 0xe0ef, 0xabae, 0xf1d4, 0x1f5a, 0x4520,
    0x951a, 0xcf60, 0x21ee, 0x7b94, 0x30d5, 0x6aaf, 0x8421, 0xde5b,
    0x12a3, 0x48d9, 0xa657, 0xfc2d, 0xb76c, 0xed16, 0x0398, 0x59e2,
    0x564f, 0x0c35, 0xe2bb, 0xb8c1, 0xf380, 0xa9fa, 0x4774, 0x1d0e,
    0xd1f6, 0x8b8c, 0x6502, 0x3f78, 0x7439, 0x2e43, 0xc0cd, 0x9ab7,
    0xdf97, 0x85ed, 0x6b63, 0x3119, 0x7a58, 0x2022, 0xceac, 0x94d6,
    0x582e, 0x0254, 0xecda, 0xb6a0, 0xfde1, 0xa79b, 0x4915, 0x136f,
    0x1cc2, 0x46b8, 0xa836, 0xf24c, 0xb90d, 0xe377, 0x0df9, 0x5783,
    0x9b7b, 0xc101, 0x2f8f, 0x75f5, 0x3eb4, 0x64ce, 0x8a40, 0xd03a,
    0xe613, 0xbc69, 0x52e7, 0x089d, 0x43dc, 0x19a6, 0xf728, 0xad52,
    0x61aa, 0x3bd0, 0xd55e, 0x8f24, 0xc465, 0x9e1f, 0x7091, 0x2aeb,
    0x2546, 0x7f3c, 0x91b2, 0xcbc8, 0x8089, 0xdaf3, 0x347d, 0x6e07,
    0xa2ff, 0xf885, 0x160b, 0x4c71, 0x0730, 0x5d4a, 0xb3c4, 0xe9be,
    0xac9e, 0xf6e4, 0x186a, 0x4210, 0x0951, 0x532b, 0xbda5, 0xe7df,
    0x2b27, 0x715d, 0x9fd3, 0xc5a9, 0x8ee8, 0xd492, 0x3a1c, 0x6066,
    0x6fcb, 0x35b1, 0xdb3f, 0x8145, 0xca04, 0x907e, 0x7ef0, 0x248a,
    0xe872, 0xb208, 0x5c86, 0x06fc, 0x4dbd, 0x17c7, 0xf949, 0xa333,
    0x7309, 0x2973, 0xc7fd, 0x9d87, 0xd6c6, 0x8cbc, 0x6232, 0x3848,
    0xf4b0, 0xaeca, 0x4044, 0x1a3e, 0x517f, 0x0b05, 0xe58b, 0xbff1,
    0xb05c, 0xea26, 0x04a8, 0x5ed2, 0x1593, 0x4fe9, 0xa167, 0xfb1d,
    0x37e5, 0x6d9f, 0x8311, 0xd96b, 0x922a, 0xc850, 0x26de, 0x7ca4,
    0x3984, 0x63fe, 0x8d70, 0xd70a, 0x9c4b, 0xc631, 0x28bf, 0x72c5,
    0xbe3d, 0xe447, 0x0ac9, 0x50b3, 0x1bf2, 0x4188, 0xaf06, 0xf57c,
    0xfad1, 0xa0ab, 0x4e25, 0x145f, 0x5f1e, 0x0564, 0xebea, 0xb190,
    0x7d68, 0x2712, 0xc99c, 0x93e6, 0xd8a7, 0x82dd, 0x6c53, 0x3629
};

make_crc_kernel_r16_t8(Rxc867)

#else

static uint16_t const Rxc867[16] =
{
    0x0000, 0xc355, 0x4a8d, 0x89d8, 0x951a, 0x564f, 0xdf97, 0x1cc2,
    0xe613, 0x2546, 0xac9e, 0x6fcb, 0x7309, 0xb05c, 0x3984, 0xfad1
};

make_crc_kernel_r16_t4(Rxc867)

#endif
