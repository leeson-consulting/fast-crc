#pragma once

///////////////////////////////////////////////////////////////////////////////
//
// Forward Polynomial Lookup Tables
//
// crc32_Fxa833982b_Profile =
// {
//   "id" : {
//     "polynomial" : "x^32 + x^31 + x^29 + x^27 + x^21 + x^20 + x^17 + x^16 + x^15 + x^12 + x^11 + x^5 + x^3 + x^1 + 1",
//     "degree"     : 32,
//     "explicit"   : "0x1a833982b",
//     "koopman"    : "0xd419cc15",
//     "normal"     : "0xa833982b"
//   },
//   "hd" :     [null, null, null,
//     /* 3 */ { "bits"    : 65505, "bytes"   : 8188 },
//     /* 4 */ { "bits"    : 65505, "bytes"   : 8188 },
//     /* 5 */ { "bits"    : 65505, "bytes"   : 8188 },
//     /* 6 */ { "bits"    : 1060, "bytes"   : 132 },
//     /* 7 */ { "bits"    : 81, "bytes"   : 10 },
//     /* 8 */ { "bits"    : 58, "bytes"   : 7 },
//     /* 9 */ { "bits"    : 27, "bytes"   : 3 },
//     /* 10 */ { "bits"    : 27, "bytes"   : 3 },
//     /* 11 */ { "bits"    : 21, "bytes"   : 2 },
//     /* 12 */ { "bits"    : 17, "bytes"   : 2 },
//     /* 13 */ { "bits"    : 3, "bytes"   : 0 },
//     /* 14 */ { "bits"    : 3, "bytes"   : 0 },
//     /* 15 */ { "bits"    : 3, "bytes"   : 0 }
//   ],
// }
//
///////////////////////////////////////////////////////////////////////////////

#include "crc_kernels/crc_tables.h"

#if defined(USE_CRC_KERNEL_TABLE8)

static uint32_t const Fxa833982b[256] =
{
    0x00000000, 0xa833982b, 0xf854a87d, 0x50673056, 0x589ac8d1, 0xf0a950fa, 0xa0ce60ac, 0x08fdf887,
    0xb13591a2, 0x19060989, 0x496139df, 0xe152a1f4, 0xe9af5973, 0x419cc158, 0x11fbf10e, 0xb9c86925,
    0xca58bb6f, 0x626b2344, 0x320c1312, 0x9a3f8b39, 0x92c273be, 0x3af1eb95, 0x6a96dbc3, 0xc2a543e8,
    0x7b6d2acd, 0xd35eb2e6, 0x833982b0, 0x2b0a1a9b, 0x23f7e21c, 0x8bc47a37, 0xdba34a61, 0x7390d24a,
    0x3c82eef5, 0x94b176de, 0xc4d64688, 0x6ce5dea3, 0x64182624, 0xcc2bbe0f, 0x9c4c8e59, 0x347f1672,
    0x8db77f57, 0x2584e77c, 0x75e3d72a, 0xddd04f01, 0xd52db786, 0x7d1e2fad, 0x2d791ffb, 0x854a87d0,
    0xf6da559a, 0x5ee9cdb1, 0x0e8efde7, 0xa6bd65cc, 0xae409d4b, 0x06730560, 0x56143536, 0xfe27ad1d,
    0x47efc438, 0xefdc5c13, 0xbfbb6c45, 0x1788f46e, 0x1f750ce9, 0xb74694c2, 0xe721a494, 0x4f123cbf,
    0x7905ddea, 0xd13645c1, 0x81517597, 0x2962edbc, 0x219f153b, 0x89ac8d10, 0xd9cbbd46, 0x71f8256d,
    0xc8304c48, 0x6003d463, 0x3064e435, 0x98577c1e, 0x90aa8499, 0x38991cb2, 0x68fe2ce4, 0xc0cdb4cf,
    0xb35d6685, 0x1b6efeae, 0x4b09cef8, 0xe33a56d3, 0xebc7ae54, 0x43f4367f, 0x13930629, 0xbba09e02,
    0x0268f727, 0xaa5b6f0c, 0xfa3c5f5a, 0x520fc771, 0x5af23ff6, 0xf2c1a7dd, 0xa2a6978b, 0x0a950fa0,
    0x4587331f, 0xedb4ab34, 0xbdd39b62, 0x15e00349, 0x1d1dfbce, 0xb52e63e5, 0xe54953b3, 0x4d7acb98,
    0xf4b2a2bd, 0x5c813a96, 0x0ce60ac0, 0xa4d592eb, 0xac286a6c, 0x041bf247, 0x547cc211, 0xfc4f5a3a,
    0x8fdf8870, 0x27ec105b, 0x778b200d, 0xdfb8b826, 0xd74540a1, 0x7f76d88a, 0x2f11e8dc, 0x872270f7,
    0x3eea19d2, 0x96d981f9, 0xc6beb1af, 0x6e8d2984, 0x6670d103, 0xce434928, 0x9e24797e, 0x3617e155,
    0xf20bbbd4, 0x5a3823ff, 0x0a5f13a9, 0xa26c8b82, 0xaa917305, 0x02a2eb2e, 0x52c5db78, 0xfaf64353,
    0x433e2a76, 0xeb0db25d, 0xbb6a820b, 0x13591a20, 0x1ba4e2a7, 0xb3977a8c, 0xe3f04ada, 0x4bc3d2f1,
    0x385300bb, 0x90609890, 0xc007a8c6, 0x683430ed, 0x60c9c86a, 0xc8fa5041, 0x989d6017, 0x30aef83c,
    0x89669119, 0x21550932, 0x71323964, 0xd901a14f, 0xd1fc59c8, 0x79cfc1e3, 0x29a8f1b5, 0x819b699e,
    0xce895521, 0x66bacd0a, 0x36ddfd5c, 0x9eee6577, 0x96139df0, 0x3e2005db, 0x6e47358d, 0xc674ada6,
    0x7fbcc483, 0xd78f5ca8, 0x87e86cfe, 0x2fdbf4d5, 0x27260c52, 0x8f159479, 0xdf72a42f, 0x77413c04,
    0x04d1ee4e, 0xace27665, 0xfc854633, 0x54b6de18, 0x5c4b269f, 0xf478beb4, 0xa41f8ee2, 0x0c2c16c9,
    0xb5e47fec, 0x1dd7e7c7, 0x4db0d791, 0xe5834fba, 0xed7eb73d, 0x454d2f16, 0x152a1f40, 0xbd19876b,
    0x8b0e663e, 0x233dfe15, 0x735ace43, 0xdb695668, 0xd394aeef, 0x7ba736c4, 0x2bc00692, 0x83f39eb9,
    0x3a3bf79c, 0x92086fb7, 0xc26f5fe1, 0x6a5cc7ca, 0x62a13f4d, 0xca92a766, 0x9af59730, 0x32c60f1b,
    0x4156dd51, 0xe965457a, 0xb902752c, 0x1131ed07, 0x19cc1580, 0xb1ff8dab, 0xe198bdfd, 0x49ab25d6,
    0xf0634cf3, 0x5850d4d8, 0x0837e48e, 0xa0047ca5, 0xa8f98422, 0x00ca1c09, 0x50ad2c5f, 0xf89eb474,
    0xb78c88cb, 0x1fbf10e0, 0x4fd820b6, 0xe7ebb89d, 0xef16401a, 0x4725d831, 0x1742e867, 0xbf71704c,
    0x06b91969, 0xae8a8142, 0xfeedb114, 0x56de293f, 0x5e23d1b8, 0xf6104993, 0xa67779c5, 0x0e44e1ee,
    0x7dd433a4, 0xd5e7ab8f, 0x85809bd9, 0x2db303f2, 0x254efb75, 0x8d7d635e, 0xdd1a5308, 0x7529cb23,
    0xcce1a206, 0x64d23a2d, 0x34b50a7b, 0x9c869250, 0x947b6ad7, 0x3c48f2fc, 0x6c2fc2aa, 0xc41c5a81
};

make_crc_kernel_f32_t8(Fxa833982b)

#else

static uint32_t const Fxa833982b[16] =
{
    0x00000000, 0xa833982b, 0xf854a87d, 0x50673056, 0x589ac8d1, 0xf0a950fa, 0xa0ce60ac, 0x08fdf887,
    0xb13591a2, 0x19060989, 0x496139df, 0xe152a1f4, 0xe9af5973, 0x419cc158, 0x11fbf10e, 0xb9c86925
};

make_crc_kernel_f32_t4(Fxa833982b)

#endif
