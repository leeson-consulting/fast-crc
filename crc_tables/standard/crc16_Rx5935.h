#pragma once

///////////////////////////////////////////////////////////////////////////////
//
// Reverse Polynomial Lookup Tables
//
// crc16_Rx5935_Profile =
// {
//   "id" : {
//     "polynomial" : "x^16 + x^14 + x^12 + x^11 + x^8 + x^5 + x^4 + x^2 + 1",
//     "degree"     : 16,
//     "explicit"   : "0x15935",
//     "koopman"    : "0xac9a",
//     "normal"     : "0x5935"
//   },
//   "hd" :     [null, null, null,
//     /* 3 */ { "bits"    : 241, "bytes"   : 30 },
//     /* 4 */ { "bits"    : 241, "bytes"   : 30 },
//     /* 5 */ { "bits"    : 241, "bytes"   : 30 },
//     /* 6 */ { "bits"    : 35, "bytes"   : 4 },
//     /* 7 */ { "bits"    : 10, "bytes"   : 1 },
//     /* 8 */ { "bits"    : 8, "bytes"   : 1 },
//     /* 9 */ { "bits"    : 3, "bytes"   : 0 }
//   ],
// }
//
///////////////////////////////////////////////////////////////////////////////

#include "crc_kernels/crc_kernel_tables.h"

#if defined(USE_CRC_KERNEL_TABLE8)

static uint16_t const Rx5935[256] =
{
    0x0000, 0x7956, 0xf2ac, 0x8bfa, 0xbc6d, 0xc53b, 0x4ec1, 0x3797,
    0x21ef, 0x58b9, 0xd343, 0xaa15, 0x9d82, 0xe4d4, 0x6f2e, 0x1678,
    0x43de, 0x3a88, 0xb172, 0xc824, 0xffb3, 0x86e5, 0x0d1f, 0x7449,
    0x6231, 0x1b67, 0x909d, 0xe9cb, 0xde5c, 0xa70a, 0x2cf0, 0x55a6,
    0x87bc, 0xfeea, 0x7510, 0x0c46, 0x3bd1, 0x4287, 0xc97d, 0xb02b,
    0xa653, 0xdf05, 0x54ff, 0x2da9, 0x1a3e, 0x6368, 0xe892, 0x91c4,
    0xc462, 0xbd34, 0x36ce, 0x4f98, 0x780f, 0x0159, 0x8aa3, 0xf3f5,
    0xe58d, 0x9cdb, 0x1721, 0x6e77, 0x59e0, 0x20b6, 0xab4c, 0xd21a,
    0x564d, 0x2f1b, 0xa4e1, 0xddb7, 0xea20, 0x9376, 0x188c, 0x61da,
    0x77a2, 0x0ef4, 0x850e, 0xfc58, 0xcbcf, 0xb299, 0x3963, 0x4035,
    0x1593, 0x6cc5, 0xe73f, 0x9e69, 0xa9fe, 0xd0a8, 0x5b52, 0x2204,
    0x347c, 0x4d2a, 0xc6d0, 0xbf86, 0x8811, 0xf147, 0x7abd, 0x03eb,
    0xd1f1, 0xa8a7, 0x235d, 0x5a0b, 0x6d9c, 0x14ca, 0x9f30, 0xe666,
    0xf01e, 0x8948, 0x02b2, 0x7be4, 0x4c73, 0x3525, 0xbedf, 0xc789,
    0x922f, 0xeb79, 0x6083, 0x19d5, 0x2e42, 0x5714, 0xdcee, 0xa5b8,
    0xb3c0, 0xca96, 0x416c, 0x383a, 0x0fad, 0x76fb, 0xfd01, 0x8457,
    0xac9a, 0xd5cc, 0x5e36, 0x2760, 0x10f7, 0x69a1, 0xe25b, 0x9b0d,
    0x8d75, 0xf423, 0x7fd9, 0x068f, 0x3118, 0x484e, 0xc3b4, 0xbae2,
    0xef44, 0x9612, 0x1de8, 0x64be, 0x5329, 0x2a7f, 0xa185, 0xd8d3,
    0xceab, 0xb7fd, 0x3c07, 0x4551, 0x72c6, 0x0b90, 0x806a, 0xf93c,
    0x2b26, 0x5270, 0xd98a, 0xa0dc, 0x974b, 0xee1d, 0x65e7, 0x1cb1,
    0x0ac9, 0x739f, 0xf865, 0x8133, 0xb6a4, 0xcff2, 0x4408, 0x3d5e,
    0x68f8, 0x11ae, 0x9a54, 0xe302, 0xd495, 0xadc3, 0x2639, 0x5f6f,
    0x4917, 0x3041, 0xbbbb, 0xc2ed, 0xf57a, 0x8c2c, 0x07d6, 0x7e80,
    0xfad7, 0x8381, 0x087b, 0x712d, 0x46ba, 0x3fec, 0xb416, 0xcd40,
    0xdb38, 0xa26e, 0x2994, 0x50c2, 0x6755, 0x1e03, 0x95f9, 0xecaf,
    0xb909, 0xc05f, 0x4ba5, 0x32f3, 0x0564, 0x7c32, 0xf7c8, 0x8e9e,
    0x98e6, 0xe1b0, 0x6a4a, 0x131c, 0x248b, 0x5ddd, 0xd627, 0xaf71,
    0x7d6b, 0x043d, 0x8fc7, 0xf691, 0xc106, 0xb850, 0x33aa, 0x4afc,
    0x5c84, 0x25d2, 0xae28, 0xd77e, 0xe0e9, 0x99bf, 0x1245, 0x6b13,
    0x3eb5, 0x47e3, 0xcc19, 0xb54f, 0x82d8, 0xfb8e, 0x7074, 0x0922,
    0x1f5a, 0x660c, 0xedf6, 0x94a0, 0xa337, 0xda61, 0x519b, 0x28cd
};

make_crc_kernel_r16_t8(Rx5935)

#else

static uint16_t const Rx5935[16] =
{
    0x0000, 0x43de, 0x87bc, 0xc462, 0x564d, 0x1593, 0xd1f1, 0x922f,
    0xac9a, 0xef44, 0x2b26, 0x68f8, 0xfad7, 0xb909, 0x7d6b, 0x3eb5
};

make_crc_kernel_r16_t4(Rx5935)

#endif
