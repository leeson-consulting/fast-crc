#pragma once

///////////////////////////////////////////////////////////////////////////////
//
// Reverse Polynomial Lookup Tables
//
// crc13_Rx1cf5_Profile =
// {
//   "id" : {
//     "polynomial" : "x^13 + x^12 + x^11 + x^10 + x^7 + x^6 + x^5 + x^4 + x^2 + 1",
//     "degree"     : 13,
//     "explicit"   : "0x3cf5",
//     "koopman"    : "0x1e7a",
//     "normal"     : "0x1cf5"
//   },
//   "hd" :     [null, null, null,
//     /* 3 */ { "bits"    : 165, "bytes"   : 20 },
//     /* 4 */ { "bits"    : 165, "bytes"   : 20 },
//     /* 5 */ { "bits"    : 14, "bytes"   : 1 },
//     /* 6 */ { "bits"    : 14, "bytes"   : 1 },
//     /* 7 */ { "bits"    : 3, "bytes"   : 0 },
//     /* 8 */ { "bits"    : 3, "bytes"   : 0 },
//     /* 9 */ { "bits"    : 1, "bytes"   : 0 },
//     /* 10 */ { "bits"    : 1, "bytes"   : 0 }
//   ],
// }
//
///////////////////////////////////////////////////////////////////////////////

#include "crc_kernels/crc_tables.h"

#if defined(USE_CRC_KERNEL_TABLE8)

static uint16_t const Rx1cf5[256] =
{
    0x0000, 0x18ad, 0x1a95, 0x0238, 0x1ee5, 0x0648, 0x0470, 0x1cdd, 0x1605, 0x0ea8, 0x0c90, 0x143d, 0x08e0, 0x104d, 0x1275, 0x0ad8,
    0x07c5, 0x1f68, 0x1d50, 0x05fd, 0x1920, 0x018d, 0x03b5, 0x1b18, 0x11c0, 0x096d, 0x0b55, 0x13f8, 0x0f25, 0x1788, 0x15b0, 0x0d1d,
    0x0f8a, 0x1727, 0x151f, 0x0db2, 0x116f, 0x09c2, 0x0bfa, 0x1357, 0x198f, 0x0122, 0x031a, 0x1bb7, 0x076a, 0x1fc7, 0x1dff, 0x0552,
    0x084f, 0x10e2, 0x12da, 0x0a77, 0x16aa, 0x0e07, 0x0c3f, 0x1492, 0x1e4a, 0x06e7, 0x04df, 0x1c72, 0x00af, 0x1802, 0x1a3a, 0x0297,
    0x1f14, 0x07b9, 0x0581, 0x1d2c, 0x01f1, 0x195c, 0x1b64, 0x03c9, 0x0911, 0x11bc, 0x1384, 0x0b29, 0x17f4, 0x0f59, 0x0d61, 0x15cc,
    0x18d1, 0x007c, 0x0244, 0x1ae9, 0x0634, 0x1e99, 0x1ca1, 0x040c, 0x0ed4, 0x1679, 0x1441, 0x0cec, 0x1031, 0x089c, 0x0aa4, 0x1209,
    0x109e, 0x0833, 0x0a0b, 0x12a6, 0x0e7b, 0x16d6, 0x14ee, 0x0c43, 0x069b, 0x1e36, 0x1c0e, 0x04a3, 0x187e, 0x00d3, 0x02eb, 0x1a46,
    0x175b, 0x0ff6, 0x0dce, 0x1563, 0x09be, 0x1113, 0x132b, 0x0b86, 0x015e, 0x19f3, 0x1bcb, 0x0366, 0x1fbb, 0x0716, 0x052e, 0x1d83,
    0x15e7, 0x0d4a, 0x0f72, 0x17df, 0x0b02, 0x13af, 0x1197, 0x093a, 0x03e2, 0x1b4f, 0x1977, 0x01da, 0x1d07, 0x05aa, 0x0792, 0x1f3f,
    0x1222, 0x0a8f, 0x08b7, 0x101a, 0x0cc7, 0x146a, 0x1652, 0x0eff, 0x0427, 0x1c8a, 0x1eb2, 0x061f, 0x1ac2, 0x026f, 0x0057, 0x18fa,
    0x1a6d, 0x02c0, 0x00f8, 0x1855, 0x0488, 0x1c25, 0x1e1d, 0x06b0, 0x0c68, 0x14c5, 0x16fd, 0x0e50, 0x128d, 0x0a20, 0x0818, 0x10b5,
    0x1da8, 0x0505, 0x073d, 0x1f90, 0x034d, 0x1be0, 0x19d8, 0x0175, 0x0bad, 0x1300, 0x1138, 0x0995, 0x1548, 0x0de5, 0x0fdd, 0x1770,
    0x0af3, 0x125e, 0x1066, 0x08cb, 0x1416, 0x0cbb, 0x0e83, 0x162e, 0x1cf6, 0x045b, 0x0663, 0x1ece, 0x0213, 0x1abe, 0x1886, 0x002b,
    0x0d36, 0x159b, 0x17a3, 0x0f0e, 0x13d3, 0x0b7e, 0x0946, 0x11eb, 0x1b33, 0x039e, 0x01a6, 0x190b, 0x05d6, 0x1d7b, 0x1f43, 0x07ee,
    0x0579, 0x1dd4, 0x1fec, 0x0741, 0x1b9c, 0x0331, 0x0109, 0x19a4, 0x137c, 0x0bd1, 0x09e9, 0x1144, 0x0d99, 0x1534, 0x170c, 0x0fa1,
    0x02bc, 0x1a11, 0x1829, 0x0084, 0x1c59, 0x04f4, 0x06cc, 0x1e61, 0x14b9, 0x0c14, 0x0e2c, 0x1681, 0x0a5c, 0x12f1, 0x10c9, 0x0864
};

make_crc_kernel_r13_t8(Rx1cf5)

#else

static uint16_t const Rx1cf5[16] =
{
    0x0000, 0x07c5, 0x0f8a, 0x084f, 0x1f14, 0x18d1, 0x109e, 0x175b, 0x15e7, 0x1222, 0x1a6d, 0x1da8, 0x0af3, 0x0d36, 0x0579, 0x02bc
};

make_crc_kernel_r13_t4(Rx1cf5)

#endif
