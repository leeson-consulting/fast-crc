#pragma once

///////////////////////////////////////////////////////////////////////////////
//
// Forward Polynomial Lookup Tables
//
// crc16_Fx1dcf_Profile =
// {
//   "id" : {
//     "polynomial" : "x^16 + x^12 + x^11 + x^10 + x^8 + x^7 + x^6 + x^3 + x^2 + x^1 + 1",
//     "degree"     : 16,
//     "explicit"   : "0x11dcf",
//     "koopman"    : "0x8ee7",
//     "normal"     : "0x1dcf"
//   },
//   "hd" :     [null, null, null,
//     /* 3 */ { "bits"    : 2743, "bytes"   : 342 },
//     /* 4 */ { "bits"    : 2743, "bytes"   : 342 },
//     /* 5 */ { "bits"    : 104, "bytes"   : 13 },
//     /* 6 */ { "bits"    : 11, "bytes"   : 1 },
//     /* 7 */ { "bits"    : 10, "bytes"   : 1 },
//     /* 8 */ { "bits"    : 8, "bytes"   : 1 },
//     /* 9 */ { "bits"    : 1, "bytes"   : 0 },
//     /* 10 */ { "bits"    : 1, "bytes"   : 0 },
//     /* 11 */ { "bits"    : 1, "bytes"   : 0 }
//   ],
// }
//
///////////////////////////////////////////////////////////////////////////////

#include "crc_kernels/crc_tables.h"

#if defined(USE_CRC_KERNEL_TABLE8)

static uint16_t const Fx1dcf[256] =
{
    0x0000, 0x1dcf, 0x3b9e, 0x2651, 0x773c, 0x6af3, 0x4ca2, 0x516d,
    0xee78, 0xf3b7, 0xd5e6, 0xc829, 0x9944, 0x848b, 0xa2da, 0xbf15,
    0xc13f, 0xdcf0, 0xfaa1, 0xe76e, 0xb603, 0xabcc, 0x8d9d, 0x9052,
    0x2f47, 0x3288, 0x14d9, 0x0916, 0x587b, 0x45b4, 0x63e5, 0x7e2a,
    0x9fb1, 0x827e, 0xa42f, 0xb9e0, 0xe88d, 0xf542, 0xd313, 0xcedc,
    0x71c9, 0x6c06, 0x4a57, 0x5798, 0x06f5, 0x1b3a, 0x3d6b, 0x20a4,
    0x5e8e, 0x4341, 0x6510, 0x78df, 0x29b2, 0x347d, 0x122c, 0x0fe3,
    0xb0f6, 0xad39, 0x8b68, 0x96a7, 0xc7ca, 0xda05, 0xfc54, 0xe19b,
    0x22ad, 0x3f62, 0x1933, 0x04fc, 0x5591, 0x485e, 0x6e0f, 0x73c0,
    0xccd5, 0xd11a, 0xf74b, 0xea84, 0xbbe9, 0xa626, 0x8077, 0x9db8,
    0xe392, 0xfe5d, 0xd80c, 0xc5c3, 0x94ae, 0x8961, 0xaf30, 0xb2ff,
    0x0dea, 0x1025, 0x3674, 0x2bbb, 0x7ad6, 0x6719, 0x4148, 0x5c87,
    0xbd1c, 0xa0d3, 0x8682, 0x9b4d, 0xca20, 0xd7ef, 0xf1be, 0xec71,
    0x5364, 0x4eab, 0x68fa, 0x7535, 0x2458, 0x3997, 0x1fc6, 0x0209,
    0x7c23, 0x61ec, 0x47bd, 0x5a72, 0x0b1f, 0x16d0, 0x3081, 0x2d4e,
    0x925b, 0x8f94, 0xa9c5, 0xb40a, 0xe567, 0xf8a8, 0xdef9, 0xc336,
    0x455a, 0x5895, 0x7ec4, 0x630b, 0x3266, 0x2fa9, 0x09f8, 0x1437,
    0xab22, 0xb6ed, 0x90bc, 0x8d73, 0xdc1e, 0xc1d1, 0xe780, 0xfa4f,
    0x8465, 0x99aa, 0xbffb, 0xa234, 0xf359, 0xee96, 0xc8c7, 0xd508,
    0x6a1d, 0x77d2, 0x5183, 0x4c4c, 0x1d21, 0x00ee, 0x26bf, 0x3b70,
    0xdaeb, 0xc724, 0xe175, 0xfcba, 0xadd7, 0xb018, 0x9649, 0x8b86,
    0x3493, 0x295c, 0x0f0d, 0x12c2, 0x43af, 0x5e60, 0x7831, 0x65fe,
    0x1bd4, 0x061b, 0x204a, 0x3d85, 0x6ce8, 0x7127, 0x5776, 0x4ab9,
    0xf5ac, 0xe863, 0xce32, 0xd3fd, 0x8290, 0x9f5f, 0xb90e, 0xa4c1,
    0x67f7, 0x7a38, 0x5c69, 0x41a6, 0x10cb, 0x0d04, 0x2b55, 0x369a,
    0x898f, 0x9440, 0xb211, 0xafde, 0xfeb3, 0xe37c, 0xc52d, 0xd8e2,
    0xa6c8, 0xbb07, 0x9d56, 0x8099, 0xd1f4, 0xcc3b, 0xea6a, 0xf7a5,
    0x48b0, 0x557f, 0x732e, 0x6ee1, 0x3f8c, 0x2243, 0x0412, 0x19dd,
    0xf846, 0xe589, 0xc3d8, 0xde17, 0x8f7a, 0x92b5, 0xb4e4, 0xa92b,
    0x163e, 0x0bf1, 0x2da0, 0x306f, 0x6102, 0x7ccd, 0x5a9c, 0x4753,
    0x3979, 0x24b6, 0x02e7, 0x1f28, 0x4e45, 0x538a, 0x75db, 0x6814,
    0xd701, 0xcace, 0xec9f, 0xf150, 0xa03d, 0xbdf2, 0x9ba3, 0x866c
};

make_crc_kernel_f16_t8(Fx1dcf)

#else

static uint16_t const Fx1dcf[16] =
{
    0x0000, 0x1dcf, 0x3b9e, 0x2651, 0x773c, 0x6af3, 0x4ca2, 0x516d,
    0xee78, 0xf3b7, 0xd5e6, 0xc829, 0x9944, 0x848b, 0xa2da, 0xbf15
};

make_crc_kernel_f16_t4(Fx1dcf)

#endif
