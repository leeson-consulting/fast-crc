#pragma once

///////////////////////////////////////////////////////////////////////////////
//
// Reverse Polynomial Lookup Tables
//
// crc32_Rx814141ab_Profile =
// {
//   "id" : {
//     "polynomial" : "x^32 + x^31 + x^24 + x^22 + x^16 + x^14 + x^8 + x^7 + x^5 + x^3 + x^1 + 1",
//     "degree"     : 32,
//     "explicit"   : "0x1814141ab",
//     "koopman"    : "0xc0a0a0d5",
//     "normal"     : "0x814141ab"
//   },
//   "hd" :     [null, null, null,
//     /* 3 */ { "bits"    : 2147483615, "bytes"   : 268435451 },
//     /* 4 */ { "bits"    : 2147483615, "bytes"   : 268435451 },
//     /* 5 */ { "bits"    : 2275, "bytes"   : 284 },
//     /* 6 */ { "bits"    : 2275, "bytes"   : 284 },
//     /* 7 */ { "bits"    : 160, "bytes"   : 20 },
//     /* 8 */ { "bits"    : 160, "bytes"   : 20 },
//     /* 9 */ { "bits"    : 34, "bytes"   : 4 },
//     /* 10 */ { "bits"    : 34, "bytes"   : 4 },
//     /* 11 */ { "bits"    : 7, "bytes"   : 0 },
//     /* 12 */ { "bits"    : 7, "bytes"   : 0 }
//   ],
// }
//
///////////////////////////////////////////////////////////////////////////////

#include "crc_kernels/crc_kernel_tables.h"

#if defined(USE_CRC_KERNEL_TABLE8)

static uint32_t const Rx814141ab[256] =
{
    0x00000000, 0x999a0002, 0x98310507, 0x01ab0505, 0x9b670f0d, 0x02fd0f0f, 0x03560a0a, 0x9acc0a08,
    0x9dcb1b19, 0x04511b1b, 0x05fa1e1e, 0x9c601e1c, 0x06ac1414, 0x9f361416, 0x9e9d1113, 0x07071111,
    0x90933331, 0x09093333, 0x08a23636, 0x91383634, 0x0bf43c3c, 0x926e3c3e, 0x93c5393b, 0x0a5f3939,
    0x0d582828, 0x94c2282a, 0x95692d2f, 0x0cf32d2d, 0x963f2725, 0x0fa52727, 0x0e0e2222, 0x97942220,
    0x8a236361, 0x13b96363, 0x12126666, 0x8b886664, 0x11446c6c, 0x88de6c6e, 0x8975696b, 0x10ef6969,
    0x17e87878, 0x8e72787a, 0x8fd97d7f, 0x16437d7d, 0x8c8f7775, 0x15157777, 0x14be7272, 0x8d247270,
    0x1ab05050, 0x832a5052, 0x82815557, 0x1b1b5555, 0x81d75f5d, 0x184d5f5f, 0x19e65a5a, 0x807c5a58,
    0x877b4b49, 0x1ee14b4b, 0x1f4a4e4e, 0x86d04e4c, 0x1c1c4444, 0x85864446, 0x842d4143, 0x1db74141,
    0xbf43c3c1, 0x26d9c3c3, 0x2772c6c6, 0xbee8c6c4, 0x2424cccc, 0xbdbeccce, 0xbc15c9cb, 0x258fc9c9,
    0x2288d8d8, 0xbb12d8da, 0xbab9dddf, 0x2323dddd, 0xb9efd7d5, 0x2075d7d7, 0x21ded2d2, 0xb844d2d0,
    0x2fd0f0f0, 0xb64af0f2, 0xb7e1f5f7, 0x2e7bf5f5, 0xb4b7fffd, 0x2d2dffff, 0x2c86fafa, 0xb51cfaf8,
    0xb21bebe9, 0x2b81ebeb, 0x2a2aeeee, 0xb3b0eeec, 0x297ce4e4, 0xb0e6e4e6, 0xb14de1e3, 0x28d7e1e1,
    0x3560a0a0, 0xacfaa0a2, 0xad51a5a7, 0x34cba5a5, 0xae07afad, 0x379dafaf, 0x3636aaaa, 0xafacaaa8,
    0xa8abbbb9, 0x3131bbbb, 0x309abebe, 0xa900bebc, 0x33ccb4b4, 0xaa56b4b6, 0xabfdb1b3, 0x3267b1b1,
    0xa5f39391, 0x3c699393, 0x3dc29696, 0xa4589694, 0x3e949c9c, 0xa70e9c9e, 0xa6a5999b, 0x3f3f9999,
    0x38388888, 0xa1a2888a, 0xa0098d8f, 0x39938d8d, 0xa35f8785, 0x3ac58787, 0x3b6e8282, 0xa2f48280,
    0xd5828281, 0x4c188283, 0x4db38786, 0xd4298784, 0x4ee58d8c, 0xd77f8d8e, 0xd6d4888b, 0x4f4e8889,
    0x48499998, 0xd1d3999a, 0xd0789c9f, 0x49e29c9d, 0xd32e9695, 0x4ab49697, 0x4b1f9392, 0xd2859390,
    0x4511b1b0, 0xdc8bb1b2, 0xdd20b4b7, 0x44bab4b5, 0xde76bebd, 0x47ecbebf, 0x4647bbba, 0xdfddbbb8,
    0xd8daaaa9, 0x4140aaab, 0x40ebafae, 0xd971afac, 0x43bda5a4, 0xda27a5a6, 0xdb8ca0a3, 0x4216a0a1,
    0x5fa1e1e0, 0xc63be1e2, 0xc790e4e7, 0x5e0ae4e5, 0xc4c6eeed, 0x5d5ceeef, 0x5cf7ebea, 0xc56debe8,
    0xc26afaf9, 0x5bf0fafb, 0x5a5bfffe, 0xc3c1fffc, 0x590df5f4, 0xc097f5f6, 0xc13cf0f3, 0x58a6f0f1,
    0xcf32d2d1, 0x56a8d2d3, 0x5703d7d6, 0xce99d7d4, 0x5455dddc, 0xcdcfddde, 0xcc64d8db, 0x55fed8d9,
    0x52f9c9c8, 0xcb63c9ca, 0xcac8cccf, 0x5352cccd, 0xc99ec6c5, 0x5004c6c7, 0x51afc3c2, 0xc835c3c0,
    0x6ac14140, 0xf35b4142, 0xf2f04447, 0x6b6a4445, 0xf1a64e4d, 0x683c4e4f, 0x69974b4a, 0xf00d4b48,
    0xf70a5a59, 0x6e905a5b, 0x6f3b5f5e, 0xf6a15f5c, 0x6c6d5554, 0xf5f75556, 0xf45c5053, 0x6dc65051,
    0xfa527271, 0x63c87273, 0x62637776, 0xfbf97774, 0x61357d7c, 0xf8af7d7e, 0xf904787b, 0x609e7879,
    0x67996968, 0xfe03696a, 0xffa86c6f, 0x66326c6d, 0xfcfe6665, 0x65646667, 0x64cf6362, 0xfd556360,
    0xe0e22221, 0x79782223, 0x78d32726, 0xe1492724, 0x7b852d2c, 0xe21f2d2e, 0xe3b4282b, 0x7a2e2829,
    0x7d293938, 0xe4b3393a, 0xe5183c3f, 0x7c823c3d, 0xe64e3635, 0x7fd43637, 0x7e7f3332, 0xe7e53330,
    0x70711110, 0xe9eb1112, 0xe8401417, 0x71da1415, 0xeb161e1d, 0x728c1e1f, 0x73271b1a, 0xeabd1b18,
    0xedba0a09, 0x74200a0b, 0x758b0f0e, 0xec110f0c, 0x76dd0504, 0xef470506, 0xeeec0003, 0x77760001
};

make_crc_kernel_r32_t8(Rx814141ab)

#else

static uint32_t const Rx814141ab[16] =
{
    0x00000000, 0x90933331, 0x8a236361, 0x1ab05050, 0xbf43c3c1, 0x2fd0f0f0, 0x3560a0a0, 0xa5f39391,
    0xd5828281, 0x4511b1b0, 0x5fa1e1e0, 0xcf32d2d1, 0x6ac14140, 0xfa527271, 0xe0e22221, 0x70711110
};

make_crc_kernel_r32_t4(Rx814141ab)

#endif
