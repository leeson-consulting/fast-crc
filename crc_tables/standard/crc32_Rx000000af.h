#pragma once

///////////////////////////////////////////////////////////////////////////////
//
// Reverse Polynomial Lookup Tables
//
// crc32_Rx000000af_Profile =
// {
//   "id" : {
//     "polynomial" : "x^32 + x^7 + x^5 + x^3 + x^2 + x^1 + 1",
//     "degree"     : 32,
//     "explicit"   : "0x1000000af",
//     "koopman"    : "0x80000057",
//     "normal"     : "0xaf"
//   },
//   "hd" :     [null, null, null,
//     /* 3 */ { "bits"    : 4294967263, "bytes"   : 536870907 },
//     /* 4 */ { "bits"    : 107274, "bytes"   : 13409 },
//     /* 5 */ { "bits"    : 2770, "bytes"   : 346 },
//     /* 6 */ { "bits"    : 325, "bytes"   : 40 },
//     /* 7 */ { "bits"    : 2, "bytes"   : 0 }
//   ],
// }
//
///////////////////////////////////////////////////////////////////////////////

#include "crc_kernels/crc_tables.h"

#if defined(USE_CRC_KERNEL_TABLE8)

static uint32_t const Rx000000af[256] =
{
    0x00000000, 0x01ea0000, 0x03d40000, 0x023e0000, 0x07a80000, 0x06420000, 0x047c0000, 0x05960000,
    0x0f500000, 0x0eba0000, 0x0c840000, 0x0d6e0000, 0x08f80000, 0x09120000, 0x0b2c0000, 0x0ac60000,
    0x1ea00000, 0x1f4a0000, 0x1d740000, 0x1c9e0000, 0x19080000, 0x18e20000, 0x1adc0000, 0x1b360000,
    0x11f00000, 0x101a0000, 0x12240000, 0x13ce0000, 0x16580000, 0x17b20000, 0x158c0000, 0x14660000,
    0x3d400000, 0x3caa0000, 0x3e940000, 0x3f7e0000, 0x3ae80000, 0x3b020000, 0x393c0000, 0x38d60000,
    0x32100000, 0x33fa0000, 0x31c40000, 0x302e0000, 0x35b80000, 0x34520000, 0x366c0000, 0x37860000,
    0x23e00000, 0x220a0000, 0x20340000, 0x21de0000, 0x24480000, 0x25a20000, 0x279c0000, 0x26760000,
    0x2cb00000, 0x2d5a0000, 0x2f640000, 0x2e8e0000, 0x2b180000, 0x2af20000, 0x28cc0000, 0x29260000,
    0x7a800000, 0x7b6a0000, 0x79540000, 0x78be0000, 0x7d280000, 0x7cc20000, 0x7efc0000, 0x7f160000,
    0x75d00000, 0x743a0000, 0x76040000, 0x77ee0000, 0x72780000, 0x73920000, 0x71ac0000, 0x70460000,
    0x64200000, 0x65ca0000, 0x67f40000, 0x661e0000, 0x63880000, 0x62620000, 0x605c0000, 0x61b60000,
    0x6b700000, 0x6a9a0000, 0x68a40000, 0x694e0000, 0x6cd80000, 0x6d320000, 0x6f0c0000, 0x6ee60000,
    0x47c00000, 0x462a0000, 0x44140000, 0x45fe0000, 0x40680000, 0x41820000, 0x43bc0000, 0x42560000,
    0x48900000, 0x497a0000, 0x4b440000, 0x4aae0000, 0x4f380000, 0x4ed20000, 0x4cec0000, 0x4d060000,
    0x59600000, 0x588a0000, 0x5ab40000, 0x5b5e0000, 0x5ec80000, 0x5f220000, 0x5d1c0000, 0x5cf60000,
    0x56300000, 0x57da0000, 0x55e40000, 0x540e0000, 0x51980000, 0x50720000, 0x524c0000, 0x53a60000,
    0xf5000000, 0xf4ea0000, 0xf6d40000, 0xf73e0000, 0xf2a80000, 0xf3420000, 0xf17c0000, 0xf0960000,
    0xfa500000, 0xfbba0000, 0xf9840000, 0xf86e0000, 0xfdf80000, 0xfc120000, 0xfe2c0000, 0xffc60000,
    0xeba00000, 0xea4a0000, 0xe8740000, 0xe99e0000, 0xec080000, 0xede20000, 0xefdc0000, 0xee360000,
    0xe4f00000, 0xe51a0000, 0xe7240000, 0xe6ce0000, 0xe3580000, 0xe2b20000, 0xe08c0000, 0xe1660000,
    0xc8400000, 0xc9aa0000, 0xcb940000, 0xca7e0000, 0xcfe80000, 0xce020000, 0xcc3c0000, 0xcdd60000,
    0xc7100000, 0xc6fa0000, 0xc4c40000, 0xc52e0000, 0xc0b80000, 0xc1520000, 0xc36c0000, 0xc2860000,
    0xd6e00000, 0xd70a0000, 0xd5340000, 0xd4de0000, 0xd1480000, 0xd0a20000, 0xd29c0000, 0xd3760000,
    0xd9b00000, 0xd85a0000, 0xda640000, 0xdb8e0000, 0xde180000, 0xdff20000, 0xddcc0000, 0xdc260000,
    0x8f800000, 0x8e6a0000, 0x8c540000, 0x8dbe0000, 0x88280000, 0x89c20000, 0x8bfc0000, 0x8a160000,
    0x80d00000, 0x813a0000, 0x83040000, 0x82ee0000, 0x87780000, 0x86920000, 0x84ac0000, 0x85460000,
    0x91200000, 0x90ca0000, 0x92f40000, 0x931e0000, 0x96880000, 0x97620000, 0x955c0000, 0x94b60000,
    0x9e700000, 0x9f9a0000, 0x9da40000, 0x9c4e0000, 0x99d80000, 0x98320000, 0x9a0c0000, 0x9be60000,
    0xb2c00000, 0xb32a0000, 0xb1140000, 0xb0fe0000, 0xb5680000, 0xb4820000, 0xb6bc0000, 0xb7560000,
    0xbd900000, 0xbc7a0000, 0xbe440000, 0xbfae0000, 0xba380000, 0xbbd20000, 0xb9ec0000, 0xb8060000,
    0xac600000, 0xad8a0000, 0xafb40000, 0xae5e0000, 0xabc80000, 0xaa220000, 0xa81c0000, 0xa9f60000,
    0xa3300000, 0xa2da0000, 0xa0e40000, 0xa10e0000, 0xa4980000, 0xa5720000, 0xa74c0000, 0xa6a60000
};

make_crc_kernel_r32_t8(Rx000000af)

#else

static uint32_t const Rx000000af[16] =
{
    0x00000000, 0x1ea00000, 0x3d400000, 0x23e00000, 0x7a800000, 0x64200000, 0x47c00000, 0x59600000,
    0xf5000000, 0xeba00000, 0xc8400000, 0xd6e00000, 0x8f800000, 0x91200000, 0xb2c00000, 0xac600000
};

make_crc_kernel_r32_t4(Rx000000af)

#endif
