#pragma once

///////////////////////////////////////////////////////////////////////////////
//
// Reverse Polynomial Lookup Tables
//
// crc24_Rx800063_Profile =
// {
//   "id" : {
//     "polynomial" : "x^24 + x^23 + x^6 + x^5 + x^1 + 1",
//     "degree"     : 24,
//     "explicit"   : "0x1800063",
//     "koopman"    : "0xc00031",
//     "normal"     : "0x800063"
//   },
//   "hd" :     [null, null, null,
//     /* 3 */ { "bits"    : 8388583, "bytes"   : 1048572 },
//     /* 4 */ { "bits"    : 8388583, "bytes"   : 1048572 },
//     /* 5 */ { "bits"    : 4, "bytes"   : 0 },
//     /* 6 */ { "bits"    : 4, "bytes"   : 0 }
//   ],
// }
//
///////////////////////////////////////////////////////////////////////////////

#include "crc_kernels/crc_tables.h"

#if defined(USE_CRC_KERNEL_TABLE8)

static uint32_t const Rx800063[256] =
{
    0x000000, 0x848401, 0x850801, 0x018c00, 0x861001, 0x029400, 0x031800, 0x879c01,
    0x802001, 0x04a400, 0x052800, 0x81ac01, 0x063000, 0x82b401, 0x833801, 0x07bc00,
    0x8c4001, 0x08c400, 0x094800, 0x8dcc01, 0x0a5000, 0x8ed401, 0x8f5801, 0x0bdc00,
    0x0c6000, 0x88e401, 0x896801, 0x0dec00, 0x8a7001, 0x0ef400, 0x0f7800, 0x8bfc01,
    0x948001, 0x100400, 0x118800, 0x950c01, 0x129000, 0x961401, 0x979801, 0x131c00,
    0x14a000, 0x902401, 0x91a801, 0x152c00, 0x92b001, 0x163400, 0x17b800, 0x933c01,
    0x18c000, 0x9c4401, 0x9dc801, 0x194c00, 0x9ed001, 0x1a5400, 0x1bd800, 0x9f5c01,
    0x98e001, 0x1c6400, 0x1de800, 0x996c01, 0x1ef000, 0x9a7401, 0x9bf801, 0x1f7c00,
    0xa50001, 0x218400, 0x200800, 0xa48c01, 0x231000, 0xa79401, 0xa61801, 0x229c00,
    0x252000, 0xa1a401, 0xa02801, 0x24ac00, 0xa33001, 0x27b400, 0x263800, 0xa2bc01,
    0x294000, 0xadc401, 0xac4801, 0x28cc00, 0xaf5001, 0x2bd400, 0x2a5800, 0xaedc01,
    0xa96001, 0x2de400, 0x2c6800, 0xa8ec01, 0x2f7000, 0xabf401, 0xaa7801, 0x2efc00,
    0x318000, 0xb50401, 0xb48801, 0x300c00, 0xb79001, 0x331400, 0x329800, 0xb61c01,
    0xb1a001, 0x352400, 0x34a800, 0xb02c01, 0x37b000, 0xb33401, 0xb2b801, 0x363c00,
    0xbdc001, 0x394400, 0x38c800, 0xbc4c01, 0x3bd000, 0xbf5401, 0xbed801, 0x3a5c00,
    0x3de000, 0xb96401, 0xb8e801, 0x3c6c00, 0xbbf001, 0x3f7400, 0x3ef800, 0xba7c01,
    0xc60001, 0x428400, 0x430800, 0xc78c01, 0x401000, 0xc49401, 0xc51801, 0x419c00,
    0x462000, 0xc2a401, 0xc32801, 0x47ac00, 0xc03001, 0x44b400, 0x453800, 0xc1bc01,
    0x4a4000, 0xcec401, 0xcf4801, 0x4bcc00, 0xcc5001, 0x48d400, 0x495800, 0xcddc01,
    0xca6001, 0x4ee400, 0x4f6800, 0xcbec01, 0x4c7000, 0xc8f401, 0xc97801, 0x4dfc00,
    0x528000, 0xd60401, 0xd78801, 0x530c00, 0xd49001, 0x501400, 0x519800, 0xd51c01,
    0xd2a001, 0x562400, 0x57a800, 0xd32c01, 0x54b000, 0xd03401, 0xd1b801, 0x553c00,
    0xdec001, 0x5a4400, 0x5bc800, 0xdf4c01, 0x58d000, 0xdc5401, 0xddd801, 0x595c00,
    0x5ee000, 0xda6401, 0xdbe801, 0x5f6c00, 0xd8f001, 0x5c7400, 0x5df800, 0xd97c01,
    0x630000, 0xe78401, 0xe60801, 0x628c00, 0xe51001, 0x619400, 0x601800, 0xe49c01,
    0xe32001, 0x67a400, 0x662800, 0xe2ac01, 0x653000, 0xe1b401, 0xe03801, 0x64bc00,
    0xef4001, 0x6bc400, 0x6a4800, 0xeecc01, 0x695000, 0xedd401, 0xec5801, 0x68dc00,
    0x6f6000, 0xebe401, 0xea6801, 0x6eec00, 0xe97001, 0x6df400, 0x6c7800, 0xe8fc01,
    0xf78001, 0x730400, 0x728800, 0xf60c01, 0x719000, 0xf51401, 0xf49801, 0x701c00,
    0x77a000, 0xf32401, 0xf2a801, 0x762c00, 0xf1b001, 0x753400, 0x74b800, 0xf03c01,
    0x7bc000, 0xff4401, 0xfec801, 0x7a4c00, 0xfdd001, 0x795400, 0x78d800, 0xfc5c01,
    0xfbe001, 0x7f6400, 0x7ee800, 0xfa6c01, 0x7df000, 0xf97401, 0xf8f801, 0x7c7c00
};

make_crc_kernel_r24_t8(Rx800063)

#else

static uint32_t const Rx800063[16] =
{
    0x000000, 0x8c4001, 0x948001, 0x18c000, 0xa50001, 0x294000, 0x318000, 0xbdc001,
    0xc60001, 0x4a4000, 0x528000, 0xdec001, 0x630000, 0xef4001, 0xf78001, 0x7bc000
};

make_crc_kernel_r24_t4(Rx800063)

#endif
