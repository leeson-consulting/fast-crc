#pragma once

///////////////////////////////////////////////////////////////////////////////
//
// Forward Polynomial Lookup Tables
//
// crc21_Fx102899_Profile =
// {
//   "id" : {
//     "polynomial" : "x^21 + x^20 + x^13 + x^11 + x^7 + x^4 + x^3 + 1",
//     "degree"     : 21,
//     "explicit"   : "0x302899",
//     "koopman"    : "0x18144c",
//     "normal"     : "0x102899"
//   },
//   "hd" :     [null, null, null,
//     /* 3 */ { "bits"    : 1002, "bytes"   : 125 },
//     /* 4 */ { "bits"    : 1002, "bytes"   : 125 },
//     /* 5 */ { "bits"    : 1002, "bytes"   : 125 },
//     /* 6 */ { "bits"    : 1002, "bytes"   : 125 },
//     /* 7 */ { "bits"    : 8, "bytes"   : 1 },
//     /* 8 */ { "bits"    : 8, "bytes"   : 1 }
//   ],
// }
//
///////////////////////////////////////////////////////////////////////////////

#include "crc_kernels/crc_tables.h"

#if defined(USE_CRC_KERNEL_TABLE8)

static uint32_t const Fx102899[256] =
{
    0x000000, 0x102899, 0x1079ab, 0x005132, 0x10dbcf, 0x00f356, 0x00a264, 0x108afd,
    0x119f07, 0x01b79e, 0x01e6ac, 0x11ce35, 0x0144c8, 0x116c51, 0x113d63, 0x0115fa,
    0x131697, 0x033e0e, 0x036f3c, 0x1347a5, 0x03cd58, 0x13e5c1, 0x13b4f3, 0x039c6a,
    0x028990, 0x12a109, 0x12f03b, 0x02d8a2, 0x12525f, 0x027ac6, 0x022bf4, 0x12036d,
    0x1605b7, 0x062d2e, 0x067c1c, 0x165485, 0x06de78, 0x16f6e1, 0x16a7d3, 0x068f4a,
    0x079ab0, 0x17b229, 0x17e31b, 0x07cb82, 0x17417f, 0x0769e6, 0x0738d4, 0x17104d,
    0x051320, 0x153bb9, 0x156a8b, 0x054212, 0x15c8ef, 0x05e076, 0x05b144, 0x1599dd,
    0x148c27, 0x04a4be, 0x04f58c, 0x14dd15, 0x0457e8, 0x147f71, 0x142e43, 0x0406da,
    0x1c23f7, 0x0c0b6e, 0x0c5a5c, 0x1c72c5, 0x0cf838, 0x1cd0a1, 0x1c8193, 0x0ca90a,
    0x0dbcf0, 0x1d9469, 0x1dc55b, 0x0dedc2, 0x1d673f, 0x0d4fa6, 0x0d1e94, 0x1d360d,
    0x0f3560, 0x1f1df9, 0x1f4ccb, 0x0f6452, 0x1feeaf, 0x0fc636, 0x0f9704, 0x1fbf9d,
    0x1eaa67, 0x0e82fe, 0x0ed3cc, 0x1efb55, 0x0e71a8, 0x1e5931, 0x1e0803, 0x0e209a,
    0x0a2640, 0x1a0ed9, 0x1a5feb, 0x0a7772, 0x1afd8f, 0x0ad516, 0x0a8424, 0x1aacbd,
    0x1bb947, 0x0b91de, 0x0bc0ec, 0x1be875, 0x0b6288, 0x1b4a11, 0x1b1b23, 0x0b33ba,
    0x1930d7, 0x09184e, 0x09497c, 0x1961e5, 0x09eb18, 0x19c381, 0x1992b3, 0x09ba2a,
    0x08afd0, 0x188749, 0x18d67b, 0x08fee2, 0x18741f, 0x085c86, 0x080db4, 0x18252d,
    0x086f77, 0x1847ee, 0x1816dc, 0x083e45, 0x18b4b8, 0x089c21, 0x08cd13, 0x18e58a,
    0x19f070, 0x09d8e9, 0x0989db, 0x19a142, 0x092bbf, 0x190326, 0x195214, 0x097a8d,
    0x1b79e0, 0x0b5179, 0x0b004b, 0x1b28d2, 0x0ba22f, 0x1b8ab6, 0x1bdb84, 0x0bf31d,
    0x0ae6e7, 0x1ace7e, 0x1a9f4c, 0x0ab7d5, 0x1a3d28, 0x0a15b1, 0x0a4483, 0x1a6c1a,
    0x1e6ac0, 0x0e4259, 0x0e136b, 0x1e3bf2, 0x0eb10f, 0x1e9996, 0x1ec8a4, 0x0ee03d,
    0x0ff5c7, 0x1fdd5e, 0x1f8c6c, 0x0fa4f5, 0x1f2e08, 0x0f0691, 0x0f57a3, 0x1f7f3a,
    0x0d7c57, 0x1d54ce, 0x1d05fc, 0x0d2d65, 0x1da798, 0x0d8f01, 0x0dde33, 0x1df6aa,
    0x1ce350, 0x0ccbc9, 0x0c9afb, 0x1cb262, 0x0c389f, 0x1c1006, 0x1c4134, 0x0c69ad,
    0x144c80, 0x046419, 0x04352b, 0x141db2, 0x04974f, 0x14bfd6, 0x14eee4, 0x04c67d,
    0x05d387, 0x15fb1e, 0x15aa2c, 0x0582b5, 0x150848, 0x0520d1, 0x0571e3, 0x15597a,
    0x075a17, 0x17728e, 0x1723bc, 0x070b25, 0x1781d8, 0x07a941, 0x07f873, 0x17d0ea,
    0x16c510, 0x06ed89, 0x06bcbb, 0x169422, 0x061edf, 0x163646, 0x166774, 0x064fed,
    0x024937, 0x1261ae, 0x12309c, 0x021805, 0x1292f8, 0x02ba61, 0x02eb53, 0x12c3ca,
    0x13d630, 0x03fea9, 0x03af9b, 0x138702, 0x030dff, 0x132566, 0x137454, 0x035ccd,
    0x115fa0, 0x017739, 0x01260b, 0x110e92, 0x01846f, 0x11acf6, 0x11fdc4, 0x01d55d,
    0x00c0a7, 0x10e83e, 0x10b90c, 0x009195, 0x101b68, 0x0033f1, 0x0062c3, 0x104a5a
};

make_crc_kernel_f21_t8(Fx102899)

#else

static uint32_t const Fx102899[16] =
{
    0x000000, 0x102899, 0x1079ab, 0x005132, 0x10dbcf, 0x00f356, 0x00a264, 0x108afd,
    0x119f07, 0x01b79e, 0x01e6ac, 0x11ce35, 0x0144c8, 0x116c51, 0x113d63, 0x0115fa
};

make_crc_kernel_f21_t4(Fx102899)

#endif
