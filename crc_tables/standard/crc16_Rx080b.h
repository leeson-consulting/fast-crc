#pragma once

///////////////////////////////////////////////////////////////////////////////
//
// Reverse Polynomial Lookup Tables
//
// crc16_Rx080b_Profile =
// {
//   "polynomial" : "x^16 + x^11 + x^3 + x^1 + 1",
//   "degree"     : 16,
//   "explicit"   : "0x1080b",
//   "koopman"    : "0x8405",
//   "normal"     : "0x80b"
// }
//
///////////////////////////////////////////////////////////////////////////////

#include "crc_kernels/crc_tables.h"

#if defined(USE_CRC_KERNEL_TABLE8)

static uint16_t const crc16_Rx080b_tbl[256] =
{
    0x0000, 0x35a4, 0x6b48, 0x5eec, 0xd690, 0xe334, 0xbdd8, 0x887c,
    0x0d01, 0x38a5, 0x6649, 0x53ed, 0xdb91, 0xee35, 0xb0d9, 0x857d,
    0x1a02, 0x2fa6, 0x714a, 0x44ee, 0xcc92, 0xf936, 0xa7da, 0x927e,
    0x1703, 0x22a7, 0x7c4b, 0x49ef, 0xc193, 0xf437, 0xaadb, 0x9f7f,
    0x3404, 0x01a0, 0x5f4c, 0x6ae8, 0xe294, 0xd730, 0x89dc, 0xbc78,
    0x3905, 0x0ca1, 0x524d, 0x67e9, 0xef95, 0xda31, 0x84dd, 0xb179,
    0x2e06, 0x1ba2, 0x454e, 0x70ea, 0xf896, 0xcd32, 0x93de, 0xa67a,
    0x2307, 0x16a3, 0x484f, 0x7deb, 0xf597, 0xc033, 0x9edf, 0xab7b,
    0x6808, 0x5dac, 0x0340, 0x36e4, 0xbe98, 0x8b3c, 0xd5d0, 0xe074,
    0x6509, 0x50ad, 0x0e41, 0x3be5, 0xb399, 0x863d, 0xd8d1, 0xed75,
    0x720a, 0x47ae, 0x1942, 0x2ce6, 0xa49a, 0x913e, 0xcfd2, 0xfa76,
    0x7f0b, 0x4aaf, 0x1443, 0x21e7, 0xa99b, 0x9c3f, 0xc2d3, 0xf777,
    0x5c0c, 0x69a8, 0x3744, 0x02e0, 0x8a9c, 0xbf38, 0xe1d4, 0xd470,
    0x510d, 0x64a9, 0x3a45, 0x0fe1, 0x879d, 0xb239, 0xecd5, 0xd971,
    0x460e, 0x73aa, 0x2d46, 0x18e2, 0x909e, 0xa53a, 0xfbd6, 0xce72,
    0x4b0f, 0x7eab, 0x2047, 0x15e3, 0x9d9f, 0xa83b, 0xf6d7, 0xc373,
    0xd010, 0xe5b4, 0xbb58, 0x8efc, 0x0680, 0x3324, 0x6dc8, 0x586c,
    0xdd11, 0xe8b5, 0xb659, 0x83fd, 0x0b81, 0x3e25, 0x60c9, 0x556d,
    0xca12, 0xffb6, 0xa15a, 0x94fe, 0x1c82, 0x2926, 0x77ca, 0x426e,
    0xc713, 0xf2b7, 0xac5b, 0x99ff, 0x1183, 0x2427, 0x7acb, 0x4f6f,
    0xe414, 0xd1b0, 0x8f5c, 0xbaf8, 0x3284, 0x0720, 0x59cc, 0x6c68,
    0xe915, 0xdcb1, 0x825d, 0xb7f9, 0x3f85, 0x0a21, 0x54cd, 0x6169,
    0xfe16, 0xcbb2, 0x955e, 0xa0fa, 0x2886, 0x1d22, 0x43ce, 0x766a,
    0xf317, 0xc6b3, 0x985f, 0xadfb, 0x2587, 0x1023, 0x4ecf, 0x7b6b,
    0xb818, 0x8dbc, 0xd350, 0xe6f4, 0x6e88, 0x5b2c, 0x05c0, 0x3064,
    0xb519, 0x80bd, 0xde51, 0xebf5, 0x6389, 0x562d, 0x08c1, 0x3d65,
    0xa21a, 0x97be, 0xc952, 0xfcf6, 0x748a, 0x412e, 0x1fc2, 0x2a66,
    0xaf1b, 0x9abf, 0xc453, 0xf1f7, 0x798b, 0x4c2f, 0x12c3, 0x2767,
    0x8c1c, 0xb9b8, 0xe754, 0xd2f0, 0x5a8c, 0x6f28, 0x31c4, 0x0460,
    0x811d, 0xb4b9, 0xea55, 0xdff1, 0x578d, 0x6229, 0x3cc5, 0x0961,
    0x961e, 0xa3ba, 0xfd56, 0xc8f2, 0x408e, 0x752a, 0x2bc6, 0x1e62,
    0x9b1f, 0xaebb, 0xf057, 0xc5f3, 0x4d8f, 0x782b, 0x26c7, 0x1363
};

make_crc_kernel_r16_t8(Rx080b)

#else

static uint16_t const crc16_Rx080b_tbl[16] =
{
    0x0000, 0x1a02, 0x3404, 0x2e06, 0x6808, 0x720a, 0x5c0c, 0x460e,
    0xd010, 0xca12, 0xe414, 0xfe16, 0xb818, 0xa21a, 0x8c1c, 0x961e
};

make_crc_kernel_r16_t4(Rx080b)

#endif
